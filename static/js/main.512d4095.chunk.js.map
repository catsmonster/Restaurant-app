{"version":3,"sources":["components/Navigation/Navigation.js","components/DeleteBtn/DeleteBtn.js","components/Table/Table.js","components/Tables/Tables.js","components/RemoveMenu/RemoveMenu.js","components/Scroll.js","components/Menu/Menu.js","components/CategoryItem/CategoryItem.js","components/SearchMenu/SearchMenu.js","components/Menu/CategoriesWithMenu.js","components/ReturnDelivered/ReturnDelivered.js","components/ReturnPrepared/ReturnPrepared.js","components/SpecialOrders/SpecialOrders.js","components/Orders/Orders.js","components/ToDoMenu/ToDoMenu.js","components/Statistics/Statistics.js","components/CustomizeMenu/CustomizeMenu.js","components/KitchenStuff/KitchenStuff.js","components/Waiters/Waiters.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","setPath","resetWhenChangingPath","setNavActive","navActive","openNav","setOpenNav","burgerKing","className","onClick","DeleteBtn","tempTables","setTempTables","id","setClickCount","clickCount","updatedTempTables","filter","item","i","length","Table","setClickedTable","tableActive","Tables","path","clickedTable","tablesArray","map","user","key","orders","total","timeAdded","Date","RemoveMenu","name","onRemoveOrderedItem","Scroll","props","style","overflowY","maxHeight","margin","children","Menu","price","onClickMenu","clickMenuItem","setClickMenuItem","tempMenu","onChangeClickMenuItem","source","updatedClickMenuItem","toggle","status","indexOfSelectedItem","findIndex","initialMenu","includes","active","CategoryItem","onClickCategory","categoryActive","setCategoryActive","SearchMenu","setMenuSearch","onChange","e","target","value","CategoriesWithMenu","setSelectedCategory","menuSearch","selectedCategory","setTempMenu","push","time","table","comments","commentInput","prompt","priceInput","isNaN","Number","updateTempMenu","alert","inputName","toLowerCase","category","inputPrice","inputCategory","menuItemsToShow","menuOfSelectedCategoryActive","menuArrayActive","menuOfSelectedCategoryHidden","menuArrayHidden","allCategoriesActive","allCategoriesHidden","uniqueCategoriesActive","Set","uniqueCategoriesHidden","categoriesArray","hiddenCategoriesArray","ReturnDelivered","ReturnPrepared","SpecialOrders","comment","clickSpecialItem","setClickSpecialItem","onRemoveSpecialItem","initialState","commentsString","join","Orders","logTables","setLogTables","getRelevantOrders","enumerateOrders","waitingOrders","preparedOrders","activeOrders","concat","specialWaitingOrders","specialPreparedOrders","specialDeliveredOrders","arrCount","prepArrCount","orderedItemsArr","indexOfOrderedItem","splice","priceOfSelectedItem","activeTempMenu","decrementPriceFromTable","getTime","selectedMenuArr","deliveredOrders","deliveredOrdersArr","preparedOrdersArr","waitingSpecialOrdersArr","preparedSpecialOrdersArr","deliveredSpecialOrdersArr","clearTable","updatedTempTable","logTotal","totalWithTip","returnedItems","order","updatedLogTables","tip","tipChange","tipChangeTen","ToDoMenu","onSetDone","Statistics","logOrdersArray","flat","Infinity","parseFloat","toFixed","CustomizeMenu","menuInput","setMenuInput","addNewItemtoMenu","setAddNewItemtoMenu","type","updatedInput","Math","abs","existingItems","lastKnownId","updateMenu","KitchenStuff","waitingArray","Waiters","deliveredArray","deliveredMenuArr","App","useState","clickedOnDelivered","setClickedOnDelivered","special","tempWaitingOrders","normalOrders","customOrders","sort","a","b","ordersDetailsArray","updateTempTables","indexOfSelectedOrder","relevantOrders","orderNamesArr","count","forEach","Object","entries","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.512d4095.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({setPath, resetWhenChangingPath, setNavActive, navActive, openNav, setOpenNav}) => {\r\n\r\n    const addClass = () => {\r\n        if (openNav) {\r\n            return 'change';\r\n        } else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    const burgerKing = (\r\n        <div className='burgerPosition'>\r\n            <div className={`burgerContainer ${addClass()}`} onClick={()=> {\r\n                setOpenNav(!openNav);\r\n            }}>\r\n                <div className={`bar1`}></div>\r\n                <div className={`bar2`}></div>\r\n                <div className={`bar3`}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {openNav ?\r\n            <div>\r\n                <div>\r\n                    {burgerKing}\r\n                </div>\r\n                <ul className='NavUl'>\r\n                    <li className={`NavLi ${navActive===0 ? 'navActive' : ''}`} onClick={()=> {setPath('tables'); resetWhenChangingPath(); setNavActive(0);}}>Tables</li>\r\n                    <li className={`NavLi ${navActive===1 ? 'navActive' : ''}`} onClick={()=> {setPath('kitchen'); resetWhenChangingPath(); setNavActive(1);}}>Kitchen Stuff</li>\r\n                    <li className={`NavLi ${navActive===2 ? 'navActive' : ''}`} onClick={()=> {setPath('waiters'); resetWhenChangingPath(); setNavActive(2);}}>Waiters</li>\r\n                    <li className={`NavLi ${navActive===3 ? 'navActive' : ''}`} onClick={()=> {setPath('customize'); resetWhenChangingPath(); setNavActive(3);}}>Customize menu</li>\r\n                    <li className={`NavLi ${navActive===4 ? 'navActive' : ''}`} onClick={()=> {setPath('Statistics'); resetWhenChangingPath(); setNavActive(4);}}>Management</li>\r\n                </ul>\r\n            </div> :\r\n              <div>\r\n                  {burgerKing}\r\n              </div>\r\n            }\r\n        </div>\r\n        );\r\n\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst DeleteBtn = ({tempTables, setTempTables, id, setClickCount, clickCount}) => {\r\n    return (\r\n        <div className='deleteBtnContainer'>\r\n        <button className='deleteBtn' onClick={()=> {\r\n            const updatedTempTables = tempTables.filter((item) => item.id !== id);\r\n            for (let i=0; i<updatedTempTables.length; i++) {\r\n                updatedTempTables[i].id = i;\r\n            }\r\n            setTempTables(updatedTempTables);\r\n            setClickCount(clickCount - 1);\r\n        }}></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteBtn;","import React from 'react';\r\nimport './Table.css'\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst Table = ({id, setPath, setClickedTable, setTempTables, tempTables, setClickCount, clickCount}) => {\r\n\r\n    const setActiveTable = () => {\r\n        if (tempTables[id].tableActive === 'false') {\r\n            return 'tableDiv'\r\n        } else if (tempTables[id].tableActive === 'waiting') {\r\n            return 'activeTableDiv'\r\n        } else {\r\n            return 'eatingTableDiv'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={setActiveTable()} id={id}>\r\n            <DeleteBtn id={id} setTempTables={setTempTables} tempTables={tempTables} setClickCount={setClickCount} clickCount={clickCount}/>\r\n            <p className='clickTable' onClick={()=> {\r\n                setClickedTable(id);\r\n                setPath(`order_${id}`)}\r\n\r\n            }>{`Click here to view and edit table number ${id + 1}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\nimport './Tables.css';\r\nimport Table from \"../Table/Table\";\r\n\r\nconst Tables = ({tempTables, path, setPath, setTempTables, clickCount, setClickCount, setClickedTable, clickedTable}) => {\r\n\r\n    const tablesArray = tempTables.map((user, i) => <Table setClickCount={setClickCount} clickCount={clickCount} setClickedTable={setClickedTable} setPath={setPath} key={tempTables[i].id} id={tempTables[i].id} tempTables={tempTables} setTempTables={setTempTables} clickedTable={clickedTable} /> );\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                {tablesArray}\r\n            </div>\r\n            <button className={'addTable'} onClick={()=> {\r\n                setClickCount(clickCount + 1);\r\n                setTempTables([...tempTables, {\r\n                    id: clickCount,\r\n                    orders: [],\r\n                    total: 0,\r\n                    tableActive: 'false',\r\n                    timeAdded: new Date()\r\n                }])\r\n\r\n            }\r\n            }>\r\n                Add a new table\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tables;","import React from 'react';\r\n\r\nconst RemoveMenu = ({name, onRemoveOrderedItem}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n\r\n        }}>\r\n            {name[1]<2 ?\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name}, 'waiting')}></button>\r\n                    <span>{`${name[1]} plate of ${name[0]}`}</span>\r\n                </div> :\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name}, 'waiting')}></button>\r\n                    <span>{`${name[1]} plates of ${name[0]}`}</span>\r\n                </div>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoveMenu;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"menuList\" style={{ overflowY: 'scroll', maxHeight: '250px', margin: '1%' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './Menu.css';\r\n\r\nconst Menu = ({id, name, price, onClickMenu, clickMenuItem, setClickMenuItem, path, tempMenu}) => {\r\n\r\n    const onChangeClickMenuItem = (source) => {\r\n        const updatedClickMenuItem = {...clickMenuItem};\r\n        if (source === 'clickMenu' && !updatedClickMenuItem.toggle) {\r\n            updatedClickMenuItem.status = id;\r\n            updatedClickMenuItem.toggle = true;\r\n        } else {\r\n            updatedClickMenuItem.status = 'false';\r\n            updatedClickMenuItem.toggle = false;\r\n            onClickMenu({name, price, source, id});\r\n        }\r\n        setClickMenuItem(updatedClickMenuItem);\r\n    };\r\n\r\n    const indexOfSelectedItem = tempMenu.findIndex((item) => item.id === id);\r\n\r\n    const initialMenu =\r\n        (\r\n            <div className='menuContainer'>\r\n                {clickMenuItem.toggle === true && clickMenuItem.status === id ?\r\n                <button onClick={()=> {\r\n                    onChangeClickMenuItem('clickMenu')\r\n                }}>&#8911;</button> :\r\n                <button onClick={()=> {\r\n                    onChangeClickMenuItem('clickMenu')\r\n                }}>&#8910;</button>\r\n                }\r\n                <span className='menuItem'>\r\n                    {name}\r\n                </span>\r\n                <span className='menuItem'>\r\n                    {price}\r\n                </span>\r\n                {path.includes('order_') ?\r\n                    <button onClick={() => onChangeClickMenuItem('add')}>&oplus;</button> : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            {clickMenuItem.status === id && path.includes('order_') ?\r\n                <div>\r\n                    {initialMenu}\r\n                    <button onClick={()=> onChangeClickMenuItem('addCustom')}>Add with a custom price</button>\r\n                    <button onClick={()=> onChangeClickMenuItem('addComment')}>Add with a comment</button>\r\n                    <button onClick={()=> onChangeClickMenuItem('addCustomComment')}>Add with a custom price and a comment</button>\r\n                </div> : clickMenuItem.status === id && path.includes('custom') ?\r\n                <div>\r\n                    {initialMenu}\r\n                    {tempMenu[indexOfSelectedItem].active === false ?\r\n                    <button onClick={() => onChangeClickMenuItem('recover')}>Recover dish</button> :\r\n                    <div>\r\n                        <button onClick={() => onChangeClickMenuItem('Remove')}>Remove dish</button>\r\n                        <button onClick={()=> onChangeClickMenuItem('updateName')}>Update dish name</button>\r\n                        <button onClick={()=> onChangeClickMenuItem('updatePrice')}>Update dish price</button>\r\n                        <button onClick={()=> onChangeClickMenuItem('updateCategory')}>Update dish category</button>\r\n                    </div>\r\n                    }\r\n                </div> :\r\n                <div>\r\n                    {initialMenu}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst CategoryItem = ({name, onClickCategory, categoryActive, setCategoryActive, id}) => {\r\n    return (\r\n      <div className={`menuContainer`} id={id===categoryActive ? 'categoryActive' : ''} onClick={() => {\r\n          onClickCategory({name});\r\n          setCategoryActive(id);\r\n      }}>\r\n          <span className='menuItem'>\r\n              {name}\r\n          </span>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default CategoryItem;","import React from 'react';\r\n\r\nconst SearchMenu = ({setMenuSearch}) => {\r\n  return (\r\n    <div>\r\n        <input className=\"searchBox\" onChange={(e) => setMenuSearch(e.target.value)}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMenu;","import React from 'react';\r\nimport Menu from \"./Menu\";\r\nimport CategoryItem from \"../CategoryItem/CategoryItem\";\r\nimport Scroll from \"../Scroll\";\r\nimport SearchMenu from \"../SearchMenu/SearchMenu\";\r\n\r\nconst CategoriesWithMenu = ({tempTables, clickedTable, setTempTables, path, setSelectedCategory, setMenuSearch, menuSearch, selectedCategory, categoryActive, setCategoryActive, tempMenu, setTempMenu, clickMenuItem, setClickMenuItem}) => {\r\n    const onClickMenu = ({name, price, source, id}) => {\r\n        if (path.includes('order_')) {\r\n            const updatedTempTables = [...tempTables];\r\n            if (source === 'add') {\r\n                updatedTempTables[clickedTable].orders.push({name: name, status: 'waiting', time: new Date(), table: clickedTable, comments: [], price: price});\r\n                updatedTempTables[clickedTable].total += price;\r\n            } else if (source === 'addComment') {\r\n                const commentInput = prompt('Enter your custom comment:');\r\n                if (commentInput) {\r\n                    updatedTempTables[clickedTable].orders.push({name: name, status: 'waiting', time: new Date(), table: clickedTable, comments: [commentInput], price: price});\r\n                    updatedTempTables[clickedTable].total += price;\r\n                } else {\r\n                    return;\r\n                }\r\n            } else if (source === 'addCustom') {\r\n                const priceInput = prompt('Enter your custom price:');\r\n                if (priceInput && !isNaN(Number(priceInput))) {\r\n                    updatedTempTables[clickedTable].orders.push({name: name, status: 'waiting', time: new Date(), table: clickedTable, comments: [`custom price ${priceInput}`], price: priceInput});\r\n                    updatedTempTables[clickedTable].total += Number(priceInput);\r\n                } else {\r\n                    return;\r\n                }\r\n            } else if (source === 'addCustomComment') {\r\n                const priceInput = prompt('Enter your custom price:');\r\n                const commentInput = prompt('Enter your custom comment:');\r\n                if (priceInput && commentInput && !isNaN(Number(priceInput))) {\r\n                    updatedTempTables[clickedTable].orders.push({name: name, status: 'waiting', time: new Date(), table: clickedTable, comments: [`custom price ${priceInput}`, commentInput], price: priceInput});\r\n                    updatedTempTables[clickedTable].total += Number(priceInput);\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            updatedTempTables[clickedTable].tableActive = 'waiting';\r\n            setTempTables(updatedTempTables);\r\n        } else {\r\n            const indexOfSelectedItem = tempMenu.findIndex((item) => item.id === id);\r\n            const updateTempMenu = [...tempMenu];\r\n            if (source === 'Remove') {\r\n                updateTempMenu[indexOfSelectedItem].active = false;\r\n            } else if (source === 'recover') {\r\n                if (updateTempMenu.filter((item) => item.active === true && item.name === name).length > 0) {\r\n                    alert('Unable to recover a dish with the same name as another active dish.')\r\n                } else {\r\n                    updateTempMenu[indexOfSelectedItem].active = true;\r\n                }\r\n            } else if (source === 'updateName') {\r\n                let inputName = '';\r\n                inputName = prompt('Please provide a new name for the dish');\r\n                if (inputName) {\r\n                    if (inputName.length > 0) {\r\n                        while (tempMenu.filter((item) => item.name.toLowerCase() === inputName.toLowerCase()).length > 0) {\r\n                            inputName = prompt('Given name already exists, please provide a unique new name');\r\n                            if (inputName) {\r\n                                if (inputName.length > 0) {\r\n                                    inputName.toLowerCase();\r\n                                }\r\n                            } else {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    return;\r\n                }\r\n                updateTempMenu[indexOfSelectedItem].active = false;\r\n                updateTempMenu.push({\r\n                    id: updateTempMenu.length + 1,\r\n                    name: inputName,\r\n                    price: updateTempMenu[indexOfSelectedItem].price,\r\n                    category: updateTempMenu[indexOfSelectedItem].category,\r\n                    active: true\r\n                });\r\n            } else if (source === 'updatePrice') {\r\n                let inputPrice = null;\r\n                inputPrice = Number(prompt('Please provide a new price for the dish'));\r\n                if (inputPrice) {\r\n                    while (isNaN(inputPrice) || inputPrice === 0) {\r\n                        inputPrice = Number(prompt('Please provide a valid price for the dish'));\r\n                    }\r\n                } else {\r\n                    return;\r\n                }\r\n                updateTempMenu[indexOfSelectedItem].active = false;\r\n                updateTempMenu.push({\r\n                    id: updateTempMenu.length + 1,\r\n                    name: updateTempMenu[indexOfSelectedItem].name,\r\n                    price: inputPrice,\r\n                    category: updateTempMenu[indexOfSelectedItem].category,\r\n                    active: true\r\n                });\r\n            } else if (source === 'updateCategory') {\r\n                let inputCategory = prompt('Please provide a category name');\r\n                if (inputCategory) {\r\n                    if (inputCategory.length > 0) {\r\n                        updateTempMenu[indexOfSelectedItem].category = inputCategory.toLowerCase();\r\n                    }\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            setTempMenu(updateTempMenu);\r\n        }\r\n\r\n    };\r\n\r\n    const onClickCategory = ({name}) => {\r\n        setSelectedCategory(name);\r\n        setMenuSearch('');\r\n    };\r\n    const menuItemsToShow = (status) => {\r\n        const activeMenuItems = tempMenu.filter((item) => item.active === status);\r\n        const menuOfSelectedCategory = activeMenuItems.filter((item) => {\r\n            if (selectedCategory === 'All' && !menuSearch.length > 0) {\r\n                return item;\r\n            } else if (menuSearch.length > 0) {\r\n                return item.name.toLowerCase().includes(menuSearch.toLowerCase());\r\n            }\r\n            return item.category === selectedCategory;\r\n        });\r\n        return menuOfSelectedCategory;\r\n    };\r\n\r\n    const menuOfSelectedCategoryActive = menuItemsToShow(true);\r\n\r\n    const menuArrayActive = menuOfSelectedCategoryActive.map((item, i) => {\r\n        return <Menu key={menuOfSelectedCategoryActive[i].id} id={menuOfSelectedCategoryActive[i].id} name={menuOfSelectedCategoryActive[i].name} price={menuOfSelectedCategoryActive[i].price} onClickMenu={onClickMenu} clickMenuItem={clickMenuItem} setClickMenuItem={setClickMenuItem} path={path} tempMenu={tempMenu}/>\r\n    });\r\n\r\n    const menuOfSelectedCategoryHidden = menuItemsToShow(false);\r\n\r\n    const menuArrayHidden = menuOfSelectedCategoryHidden.map((item, i) => {\r\n        return <Menu key={menuOfSelectedCategoryHidden[i].id} id={menuOfSelectedCategoryHidden[i].id} name={menuOfSelectedCategoryHidden[i].name} price={menuOfSelectedCategoryHidden[i].price} onClickMenu={onClickMenu} clickMenuItem={clickMenuItem} setClickMenuItem={setClickMenuItem} path={path} tempMenu={tempMenu}/>\r\n    });\r\n\r\n    let allCategoriesActive = ['All'];\r\n    let allCategoriesHidden = ['All'];\r\n    for (let i=0; i<tempMenu.length; i++) {\r\n        if (tempMenu[i].active === true) {\r\n            allCategoriesActive.push(tempMenu[i].category)\r\n        } else {\r\n            allCategoriesHidden.push(tempMenu[i].category)\r\n        }\r\n    }\r\n    const uniqueCategoriesActive = [...new Set(allCategoriesActive)];\r\n\r\n    const uniqueCategoriesHidden = [...new Set(allCategoriesHidden)];\r\n\r\n    const categoriesArray = uniqueCategoriesActive.map((item, i) => {\r\n        return <CategoryItem categoryActive={categoryActive} setCategoryActive={setCategoryActive} onClickCategory={onClickCategory} key={i} id={i} name={item}/>\r\n    });\r\n\r\n    const hiddenCategoriesArray = uniqueCategoriesHidden.map((item, i) => {\r\n        return <CategoryItem categoryActive={categoryActive} setCategoryActive={setCategoryActive} onClickCategory={onClickCategory} key={i} id={i} name={item}/>\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='menuArray'>\r\n                <Scroll>\r\n                    {categoriesArray}\r\n                </Scroll>\r\n                <Scroll>\r\n                    {menuArrayActive}\r\n                </Scroll>\r\n            </div>\r\n            {path === 'customize' && hiddenCategoriesArray.length > 1 ?\r\n            <div>\r\n                <h3>Click a menu item to bring it back from the trash</h3>\r\n                <div className='menuArray'>\r\n                    <Scroll>\r\n                        {hiddenCategoriesArray}\r\n                    </Scroll>\r\n                    <Scroll>\r\n                        {menuArrayHidden}\r\n                    </Scroll>\r\n                </div>\r\n            </div>: <span></span>\r\n                }\r\n            <div className='searchContainer'>\r\n                <span id='searchText'>Search menu item:</span>\r\n                <SearchMenu setMenuSearch={setMenuSearch}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoriesWithMenu;","import React from 'react';\r\n\r\nconst ReturnDelivered = ({name, onRemoveOrderedItem}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n\r\n        }}>\r\n            {name[1]<2 ?\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name}, 'delivered')}></button>\r\n                    <span>{`${name[1]} plate of ${name[0]}`}</span>\r\n                </div> :\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name}, 'delivered')}></button>\r\n                    <span>{`${name[1]} plates of ${name[0]}`}</span>\r\n                </div>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReturnDelivered;","import React from 'react';\r\n\r\nconst ReturnPrepared = ({name, onRemoveOrderedItem}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n\r\n        }}>\r\n            {name[1]<2 ?\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name}, 'prepared')}></button>\r\n                    <span>{`${name[1]} plate of ${name[0]}`}</span>\r\n                </div> :\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name}, 'prepared')}></button>\r\n                    <span>{`${name[1]} plates of ${name[0]}`}</span>\r\n                </div>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReturnPrepared;","import React from 'react';\r\n\r\nconst SpecialOrders = ({name, comment, time, status, price, clickSpecialItem, setClickSpecialItem, onRemoveSpecialItem}) => {\r\n\r\n\r\n    const initialState = (\r\n        <div>\r\n            <button className='deleteBtn' onClick={()=> onRemoveSpecialItem({time, status, price})}></button>\r\n            <span>{name}</span>\r\n            {clickSpecialItem === time ?\r\n                <button onClick={() => setClickSpecialItem('false')}>Hide info</button> :\r\n                <button onClick={() => setClickSpecialItem(time)}>More info</button>\r\n            }\r\n        </div>\r\n    );\r\n\r\n    const commentsString = comment.join(', ');\r\n\r\n    return (\r\n        <div className='foodContainer'>\r\n            {clickSpecialItem === time ?\r\n                <div>\r\n                    {initialState}\r\n                    <p>{commentsString}</p>\r\n                </div> :\r\n                <div>\r\n                    {initialState}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpecialOrders;","import React from 'react';\r\nimport './Orders.css'\r\nimport RemoveMenu from \"../RemoveMenu/RemoveMenu\";\r\nimport Scroll from \"../Scroll\";\r\nimport CategoriesWithMenu from \"../Menu/CategoriesWithMenu\";\r\nimport ReturnDelivered from \"../ReturnDelivered/ReturnDelivered\";\r\nimport ReturnPrepared from \"../ReturnPrepared/ReturnPrepared\";\r\nimport SpecialOrders from \"../SpecialOrders/SpecialOrders\";\r\n\r\nconst Orders = ({path, tempTables, clickedTable, setTempTables, logTables, setLogTables, setMenuSearch, menuSearch, selectedCategory, setSelectedCategory, categoryActive, setCategoryActive, getRelevantOrders, enumerateOrders, tempMenu, setTempMenu, clickMenuItem, setClickMenuItem, clickSpecialItem, setClickSpecialItem}) => {\r\n\r\n\r\n    const waitingOrders = getRelevantOrders('waiting', false);\r\n    const preparedOrders = getRelevantOrders('prepared', false);\r\n    const activeOrders = waitingOrders.concat(preparedOrders);\r\n\r\n    const specialWaitingOrders = getRelevantOrders('waiting', true);\r\n    const specialPreparedOrders = getRelevantOrders('prepared', true);\r\n    const specialDeliveredOrders = getRelevantOrders('delivered', true);\r\n\r\n\r\n    const arrCount = enumerateOrders(waitingOrders);\r\n    const prepArrCount = enumerateOrders(preparedOrders);\r\n\r\n    const onRemoveOrderedItem = ({name}, status) => {\r\n        const updatedTempTables = [...tempTables];\r\n        const orderedItemsArr = updatedTempTables[clickedTable].orders;\r\n        let indexOfOrderedItem = 0;\r\n        if (status === 'waiting') {\r\n            indexOfOrderedItem = orderedItemsArr.findIndex((item) => item.name === name[0] && (item.status === 'waiting') && (item.comments.length === 0));\r\n            updatedTempTables[clickedTable].orders.splice(indexOfOrderedItem, 1);\r\n        } else if (status === 'delivered') {\r\n            indexOfOrderedItem = orderedItemsArr.findIndex((item) => item.name === name[0] && (item.status === 'delivered') && (item.comments.length === 0));\r\n            updatedTempTables[clickedTable].orders[indexOfOrderedItem].status = 'returned';\r\n        } else {\r\n            indexOfOrderedItem = orderedItemsArr.findIndex((item) => item.name === name[0] && (item.status === 'prepared') && (item.comments.length === 0));\r\n            updatedTempTables[clickedTable].orders[indexOfOrderedItem].status = 'returned';\r\n        }\r\n        let priceOfSelectedItem = 0;\r\n        const activeTempMenu = tempMenu.filter((item) => item.active === true);\r\n        for (let i=0; i<activeTempMenu.length; i++)\r\n            if (activeTempMenu[i].name === name[0]) {\r\n                priceOfSelectedItem = activeTempMenu[i].price;\r\n            }\r\n        decrementPriceFromTable(priceOfSelectedItem);\r\n        setTempTables(updatedTempTables);\r\n    };\r\n\r\n    const onRemoveSpecialItem = ({time, status, price}) => {\r\n        const updatedTempTables = [...tempTables];\r\n        const orderedItemsArr = updatedTempTables[clickedTable].orders;\r\n        let indexOfOrderedItem = 0;\r\n        if (status === 'waiting') {\r\n            indexOfOrderedItem = orderedItemsArr.findIndex((item) => item.time.getTime() === time);\r\n            updatedTempTables[clickedTable].orders.splice(indexOfOrderedItem, 1);\r\n        } else {\r\n            indexOfOrderedItem = orderedItemsArr.findIndex((item) => item.time.getTime() === time);\r\n            updatedTempTables[clickedTable].orders[indexOfOrderedItem].status = 'returned';\r\n        }\r\n        decrementPriceFromTable(price);\r\n        setTempTables(updatedTempTables);\r\n\r\n    };\r\n\r\n    const decrementPriceFromTable = (price) => {\r\n        const updatedTempTables = [...tempTables];\r\n        updatedTempTables[clickedTable].total -= price;\r\n        if (updatedTempTables[clickedTable].total === 0 && updatedTempTables[clickedTable].orders.length === 0) {\r\n            updatedTempTables[clickedTable].tableActive = 'false';\r\n            updatedTempTables[clickedTable].timeAdded = new Date();\r\n        }\r\n        setTempTables(updatedTempTables);\r\n    };\r\n\r\n    const selectedMenuArr = arrCount.map((item, i)=> {\r\n        return <RemoveMenu key={i} id={i} name={arrCount[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    const tempDeliveredOrders = getRelevantOrders('delivered', false);\r\n    const deliveredOrders = enumerateOrders(tempDeliveredOrders);\r\n\r\n    const deliveredOrdersArr = deliveredOrders.map((item, i)=> {\r\n        return <ReturnDelivered key={i} id={i} name={deliveredOrders[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    const preparedOrdersArr = prepArrCount.map((item, i)=> {\r\n        return <ReturnPrepared key={i} id={i} name={prepArrCount[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    const waitingSpecialOrdersArr = specialWaitingOrders.map((item, i)=> {\r\n        return <SpecialOrders key={i} id={i} name={specialWaitingOrders[i][0]} time={specialWaitingOrders[i][2]} status={specialWaitingOrders[i][3]} comment={specialWaitingOrders[i][4]} price={specialWaitingOrders[i][5]} clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} onRemoveSpecialItem={onRemoveSpecialItem}/>\r\n    });\r\n\r\n    const preparedSpecialOrdersArr = specialPreparedOrders.map((item, i)=> {\r\n        return <SpecialOrders key={i} id={i} name={specialPreparedOrders[i][0]} time={specialPreparedOrders[i][2]} status={specialPreparedOrders[i][3]} comment={specialPreparedOrders[i][4]} price={specialPreparedOrders[i][5]} clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} onRemoveSpecialItem={onRemoveSpecialItem}/>\r\n    });\r\n\r\n    const deliveredSpecialOrdersArr = specialDeliveredOrders.map((item, i)=> {\r\n        return <SpecialOrders key={i} id={i} name={specialDeliveredOrders[i][0]} time={specialDeliveredOrders[i][2]} status={specialDeliveredOrders[i][3]} comment={specialDeliveredOrders[i][4]} price={specialDeliveredOrders[i][5]} clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} onRemoveSpecialItem={onRemoveSpecialItem}/>\r\n    });\r\n\r\n\r\n    const clearTable = () => {\r\n        const updatedTempTable = [...tempTables];\r\n        updatedTempTable[clickedTable] = {id: clickedTable, orders: [], total: 0, tableActive: 'false', timeAdded: new Date()};\r\n        setTempTables(updatedTempTable);\r\n    };\r\n\r\n    const logTotal = () => {\r\n        const totalWithTip = tempTables[clickedTable].total;\r\n        const returnedItems = tempTables[clickedTable].orders.filter((order)=> order.status === 'returned');\r\n        const updatedLogTables = {...logTables};\r\n        updatedLogTables.total = logTables.total + totalWithTip;\r\n        updatedLogTables.orders.push(returnedItems);\r\n        setLogTables(updatedLogTables);\r\n    };\r\n\r\n    const tipChange = () => {\r\n        let tip = Number(prompt('Is there a tip?', '0'));\r\n        const updatedTempTables = [...tempTables];\r\n        updatedTempTables[clickedTable].total += tip;\r\n        setTempTables(updatedTempTables);\r\n        logTotal();\r\n        clearTable();\r\n    };\r\n\r\n    const tipChangeTen = () => {\r\n        const updatedTempTables = [...tempTables];\r\n        updatedTempTables[clickedTable].total *= 1.1;\r\n        setTempTables(updatedTempTables);\r\n        logTotal();\r\n        clearTable();\r\n    };\r\n\r\n    return (\r\n        <div className='statisticsMain'>\r\n            <h1>This is da menu!</h1>\r\n            <CategoriesWithMenu clickMenuItem={clickMenuItem} setClickMenuItem={setClickMenuItem} setTempTables={setTempTables} setCategoryActive={setCategoryActive} categoryActive={categoryActive} setMenuSearch={setMenuSearch} tempTables={tempTables} path={path} clickedTable={clickedTable} menuSearch={menuSearch} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} tempMenu={tempMenu} setTempMenu={setTempMenu}/>\r\n            <h1>{`Table ${tempTables[clickedTable].id + 1} ordered the following items:`}</h1>\r\n            <div className='menuArrayContainer'>\r\n                <div className='selectedMenu'>\r\n                    <h3>Waiting orders:</h3>\r\n                    <Scroll>\r\n                        {selectedMenuArr}\r\n                        {waitingSpecialOrdersArr}\r\n                    </Scroll>\r\n                </div>\r\n                <div className='selectedMenu'>\r\n                    <h3>Ready for delivery:</h3>\r\n                    <Scroll>\r\n                        {preparedOrdersArr}\r\n                        {preparedSpecialOrdersArr}\r\n                    </Scroll>\r\n                </div>\r\n                <div className='selectedMenu'>\r\n                    <h3>Orders delivered:</h3>\r\n                    <Scroll>\r\n                        {deliveredOrdersArr}\r\n                        {deliveredSpecialOrdersArr}\r\n                    </Scroll>\r\n                </div>\r\n            </div>\r\n            <p>{`For a total of ${tempTables[clickedTable].total}`}</p>\r\n            <button className='addTable' onClick={()=> {\r\n                if (activeOrders.length > 0) {\r\n                    alert('Table has not yet received all orders!')\r\n                } else {\r\n                    tipChange()\r\n                }\r\n            }}>Checkout and add a custom tip</button>\r\n            <button className='addTable' onClick={()=> {\r\n                if (activeOrders.length > 0) {\r\n                    alert('Table has not yet received all orders!')\r\n                } else {\r\n                    tipChangeTen()\r\n                }\r\n            }}>Checkout and add 10% tip</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;","import React from 'react';\r\nimport './ToDoMenu.css'\r\n\r\nconst ToDoMenu = ({name, onSetDone, time, table, status, comment, clickSpecialItem, setClickSpecialItem}) => {\r\n\r\n    const commentsString = comment.join(', ');\r\n\r\n    const initialState = (\r\n        <div>\r\n            {commentsString.length > 0 && clickSpecialItem === 'false' ?\r\n            <div>\r\n                <span>\r\n                    {`Order ${name} of table ${table + 1}`}\r\n                </span>\r\n                <button onClick={()=> setClickSpecialItem(time)}>More info</button>\r\n            </div> : commentsString.length > 0 && clickSpecialItem === time ?\r\n            <div>\r\n                <span>\r\n                    {`Order ${name} of table ${table + 1}`}\r\n                </span>\r\n                <button onClick={()=> setClickSpecialItem('false')}>Less info</button>\r\n                <span>{commentsString}</span>\r\n            </div> :\r\n            <span>\r\n                {`Order ${name} of table ${table + 1}`}\r\n            </span>\r\n            }\r\n            {status === 'waiting' ?\r\n                <button className='addTable' onClick={() => onSetDone({time, table, status})}>Prepared</button> : status === 'prepared' ?\r\n                    <button className='addTable' onClick={() => onSetDone({time, table, status})}>Delivered</button> :\r\n                    null\r\n            }\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='todoList'>\r\n            {initialState}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoMenu;","import React from 'react';\r\nimport './Statistics.css'\r\nimport ToDoMenu from \"../ToDoMenu/ToDoMenu\";\r\nimport Scroll from \"../Scroll\";\r\n\r\nconst Statistics = ({logTables, clickSpecialItem, setClickSpecialItem}) => {\r\n\r\n    const logOrdersArray = logTables.orders.flat(Infinity);\r\n\r\n    const returnedItems = logOrdersArray.map((order, i) => {\r\n        return <ToDoMenu key={i} id={i} name={logOrdersArray[i].name} table={logOrdersArray[i].table} time={logOrdersArray[i].time.getTime()}\r\n                         status={logOrdersArray[i].status} comment={logOrdersArray[i].comments} clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} />\r\n    });\r\n\r\n    return (\r\n        <div className='statisticsMain'>\r\n                <h2>Income:</h2>\r\n                <span>{`The total revenue from all checked out tables is ${parseFloat(logTables.total).toFixed(2)}`}</span>\r\n                <div>\r\n                    <h3>The following orders were returned:</h3>\r\n                    <Scroll>\r\n                        {returnedItems}\r\n                    </Scroll>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport './CustomizeMenu.css'\r\nimport CategoriesWithMenu from \"../Menu/CategoriesWithMenu\";\r\n\r\nconst CustomizeMenu = ({menuInput, setMenuInput, addNewItemtoMenu, setAddNewItemtoMenu, setTempTables, setCategoryActive, categoryActive, setMenuSearch, tempTables, path, clickedTable, menuSearch, selectedCategory, setSelectedCategory, tempMenu, setTempMenu, clickMenuItem, setClickMenuItem}) => {\r\n    const updateMenu = () => {\r\n        let existingItems = [];\r\n        for (let i=0; i<tempMenu.length; i++) {\r\n            existingItems.push(tempMenu[i].name.toLowerCase());\r\n        }\r\n        let lastKnownId = tempMenu[tempMenu.length - 1].id;\r\n        if (menuInput.name.length > 0 && !isNaN(Number(menuInput.price)) && menuInput.category.length > 0) {\r\n            if (existingItems.includes(menuInput.name.toLowerCase())) {\r\n                return alert(`The dish ${menuInput.name} already exists, please enter a unique dish name`);\r\n            }\r\n            tempMenu.push({id: lastKnownId + 1, name: menuInput.name, price: menuInput.price, category: menuInput.category, active: true});\r\n            setAddNewItemtoMenu(false);\r\n        } else {\r\n            alert(\"Please enter correct dish details.\");\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='statisticsMain'>\r\n            <h2>Here you will be able to customize your menu</h2>\r\n            {addNewItemtoMenu ?\r\n            <div className='addDish'>\r\n                <span>Please enter dish name:</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.name = e.target.value;\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <span>Please enter dish price:</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.price = Math.abs(Number(e.target.value));\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <span>Please enter a category</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.category = e.target.value.toLowerCase();\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <button className='addTable' onClick={()=> updateMenu()}>Add dish</button>\r\n                <h3>Click a menu item to remove it from the menu - This will not affect history</h3>\r\n                <CategoriesWithMenu setTempTables={setTempTables} setCategoryActive={setCategoryActive} categoryActive={categoryActive} setMenuSearch={setMenuSearch} tempTables={tempTables} path={path} clickedTable={clickedTable} menuSearch={menuSearch} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} setTempMenu={setTempMenu} tempMenu={tempMenu} clickMenuItem={clickMenuItem} setClickMenuItem={setClickMenuItem}/>\r\n            </div> :\r\n                <div>\r\n                    <h3>Click a menu item to remove it from the menu - This will not affect history</h3>\r\n                    <CategoriesWithMenu setTempTables={setTempTables} setCategoryActive={setCategoryActive} categoryActive={categoryActive} setMenuSearch={setMenuSearch} tempTables={tempTables} path={path} clickedTable={clickedTable} menuSearch={menuSearch} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} tempMenu={tempMenu} setTempMenu={setTempMenu} clickMenuItem={clickMenuItem} setClickMenuItem={setClickMenuItem}/>\r\n                    <button className='addTable' onClick={() => setAddNewItemtoMenu(true)}>Add a new menu item</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomizeMenu;","import React from 'react';\r\nimport ToDoMenu from \"../ToDoMenu/ToDoMenu\";\r\nimport Scroll from \"../Scroll\";\r\n\r\nconst KitchenStuff = ({getRelevantOrders, onSetDone, clickSpecialItem, setClickSpecialItem}) => {\r\n\r\n    const waitingArray = getRelevantOrders('waiting');\r\n\r\n    const selectedMenuArr = waitingArray.map((item, i) => {\r\n        return <ToDoMenu key={i} id={i} name={waitingArray[i][0]} table={waitingArray[i][1]} time={waitingArray[i][2]}\r\n                         status={waitingArray[i][3]} comment={waitingArray[i][4]} onSetDone={onSetDone} setClickSpecialItem={setClickSpecialItem} clickSpecialItem={clickSpecialItem}/>\r\n    });\r\n\r\n    return (\r\n        <div className='statisticsMain'>\r\n            <div className='containerOfContainer'>\r\n                <h3>Waiting list:</h3>\r\n                <Scroll>\r\n                    {selectedMenuArr}\r\n                </Scroll>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KitchenStuff;","import React from 'react';\r\nimport ToDoMenu from \"../ToDoMenu/ToDoMenu\";\r\nimport Scroll from \"../Scroll\";\r\n\r\nconst Waiters = ({getRelevantOrders, onSetDone, clickSpecialItem, setClickSpecialItem}) => {\r\n\r\n    const deliveredArray = getRelevantOrders('prepared');\r\n\r\n    const deliveredMenuArr = deliveredArray.map((item, i)=> {\r\n        return <ToDoMenu key={i} id={i} name={deliveredArray[i][0]} table={deliveredArray[i][1]} time={deliveredArray[i][2]} status={deliveredArray[i][3]} comment={deliveredArray[i][4]} onSetDone={onSetDone} clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} />\r\n    });\r\n\r\n    return (\r\n        <div className='statisticsMain'>\r\n            <div className='containerOfContainer'>\r\n                <h3>Ready for delivery:</h3>\r\n                <Scroll>\r\n                    {deliveredMenuArr}\r\n                </Scroll>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Waiters;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport Tables from \"../components/Tables/Tables\";\r\nimport Orders from \"../components/Orders/Orders\";\r\nimport Statistics from \"../components/Statistics/Statistics\";\r\nimport CustomizeMenu from \"../components/CustomizeMenu/CustomizeMenu\";\r\nimport KitchenStuff from \"../components/KitchenStuff/KitchenStuff\";\r\nimport Waiters from \"../components/Waiters/Waiters\";\r\n\r\nfunction App() {\r\n    /*const [tables, setTables] = useState([]);*/\r\n    const [clickCount, setClickCount] = useState(1);\r\n    const [path, setPath] = useState('tables');\r\n    const [clickedTable, setClickedTable] = useState(0);\r\n    const [logTables, setLogTables] = useState({orders: [], total: 0});\r\n    const [menuSearch, setMenuSearch] = useState('');\r\n    const [menuInput, setMenuInput] = useState({name: '', price: 0, category: ''});\r\n    const [addNewItemtoMenu, setAddNewItemtoMenu] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState('All');\r\n    const [categoryActive, setCategoryActive] = useState(0);\r\n    const [navActive, setNavActive] = useState(0);\r\n    const [clickedOnDelivered, setClickedOnDelivered] = useState(false);\r\n    const [clickMenuItem, setClickMenuItem] = useState({status: 'false', toggle: false});\r\n    const [clickSpecialItem, setClickSpecialItem] = useState('false');\r\n    const [openNav, setOpenNav] = useState(false);\r\n    const [tempTables, setTempTables] = useState([{\r\n        id: 0,\r\n        orders: [],\r\n        total: 0,\r\n        tableActive: 'false',\r\n        timeAdded: new Date()\r\n    }]);\r\n    const [tempMenu, setTempMenu] = useState([{\r\n        id: 1,\r\n        name: 'grilled chicken',\r\n        price: 80,\r\n        category: 'main dishes',\r\n        active: true\r\n    },\r\n        {\r\n            id: 2,\r\n            name: 'ceaser salad',\r\n            price: 55,\r\n            category: 'starters',\r\n            active: true\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'beef steak',\r\n            price: 120,\r\n            category: 'main dishes',\r\n            active: true\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'pepperony',\r\n            price: 90,\r\n            category: 'pizzas',\r\n            active: true\r\n        }]);\r\n\r\n\r\n    const resetWhenChangingPath = () => {\r\n        setCategoryActive(0);\r\n        setSelectedCategory('All');\r\n        setMenuSearch('');\r\n        setMenuInput({name: '', price: 0, category: ''});\r\n        setAddNewItemtoMenu(false);\r\n        const updatedClickMenuItem = {...clickMenuItem};\r\n        updatedClickMenuItem.status = 'false';\r\n        setClickMenuItem(updatedClickMenuItem);\r\n        setClickSpecialItem('false');\r\n    };\r\n\r\n    const getRelevantOrders = (status, special) => {\r\n        let tempWaitingOrders = [];\r\n        if (path === 'waiters' || path === 'kitchen') {\r\n            for (let i=0; i<tempTables.length; i++) {\r\n                tempWaitingOrders.push(tempTables[i].orders.filter((order) => order.status === status));\r\n            }\r\n        } else if (path.includes('order_')) {\r\n            const normalOrders = tempTables[clickedTable].orders.filter((order) => order.status === status && (order.comments.length === 0));\r\n            const customOrders = tempTables[clickedTable].orders.filter((order)=> order.status === status && order.comments.length > 0);\r\n            if (special) {\r\n                tempWaitingOrders.push(customOrders);\r\n            } else {\r\n                tempWaitingOrders.push(normalOrders);\r\n            }\r\n        }\r\n\r\n        const waitingOrders = tempWaitingOrders.flat(1);\r\n\r\n        waitingOrders.sort((a,b)=>b.time.getTime() - a.time.getTime());\r\n\r\n        let ordersDetailsArray = [];\r\n        for (let i=0; i<waitingOrders.length; i++) {\r\n            ordersDetailsArray.push([waitingOrders[i].name, waitingOrders[i].table, waitingOrders[i].time.getTime(), waitingOrders[i].status, waitingOrders[i].comments, waitingOrders[i].price]);\r\n        }\r\n        return ordersDetailsArray;\r\n    };\r\n\r\n    const enumerateOrders = (relevantOrders) => {\r\n        let orderNamesArr = [];\r\n        for (let i=0; i<relevantOrders.length; i++) {\r\n            orderNamesArr.push(relevantOrders[i][0]);\r\n        }\r\n\r\n        let count = {};\r\n        orderNamesArr.forEach((i) => {\r\n            count[i] = (count[i] || 0) + 1;\r\n        });\r\n        let arrCount = Object.entries(count);\r\n        arrCount.sort();\r\n        return arrCount;\r\n    };\r\n\r\n    const onSetDone = ({time, table, status}) => {\r\n        const updateTempTables = [...tempTables];\r\n        const indexOfSelectedOrder = updateTempTables[table].orders.findIndex((order) => order.time.getTime() === time);\r\n        if (status === 'waiting') {\r\n            updateTempTables[table].orders[indexOfSelectedOrder].status = 'prepared';\r\n        } else {\r\n            updateTempTables[table].orders[indexOfSelectedOrder].status = 'delivered';\r\n            const ordersDelivered = updateTempTables[table].orders.filter((order) => order.status === 'delivered');\r\n            if (ordersDelivered.length === updateTempTables[table].orders.filter((order)=> order.status !== 'returned').length) {\r\n                updateTempTables[table].tableActive = 'eating';\r\n            }\r\n        }\r\n        setTempTables(updateTempTables);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navigation openNav={openNav} setOpenNav={setOpenNav} setNavActive={setNavActive} navActive={navActive} resetWhenChangingPath={resetWhenChangingPath} setPath={setPath} />\r\n            {path === 'tables' ?\r\n                <Tables clickedTable={clickedTable} setClickedTable={setClickedTable} clickCount={clickCount} setClickCount={setClickCount} setTempTables={setTempTables} tempTables={tempTables} path={path} setPath={setPath}/>\r\n                : path.includes(`order_`) ?\r\n                    <Orders clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} clickMenuItem={clickMenuItem} setClickMenuItem={setClickMenuItem} clickedOnDelivered={clickedOnDelivered} setClickedOnDelivered={setClickedOnDelivered} tempMenu={tempMenu} setTempMenu={setTempMenu} path={path} enumerateOrders={enumerateOrders} getRelevantOrders={getRelevantOrders} categoryActive={categoryActive} setCategoryActive={setCategoryActive} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} menuSearch={menuSearch} setMenuSearch={setMenuSearch} logTables={logTables} setLogTables={setLogTables} tempTables={tempTables} clickedTable={clickedTable} setTempTables={setTempTables}/> : path.includes('customize') ?\r\n                        <CustomizeMenu setClickMenuItem={setClickMenuItem} clickMenuItem={clickMenuItem} tempMenu={tempMenu} setTempMenu={setTempMenu} path={path} setSelectedCategory={setSelectedCategory} selectedCategory={selectedCategory} menuSearch={menuSearch} clickedTable={clickedTable} tempTables={tempTables} setMenuSearch={setMenuSearch} categoryActive={categoryActive} setCategoryActive={setCategoryActive} setTempTables={setTempTables} addNewItemtoMenu={addNewItemtoMenu} setAddNewItemtoMenu={setAddNewItemtoMenu} menuInput={menuInput} setMenuInput={setMenuInput} /> : path === 'Statistics' ?\r\n                        <Statistics clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} onSetDone={onSetDone} getRelevantOrders={getRelevantOrders} logTables={logTables}/> : path === 'kitchen' ?\r\n                        <KitchenStuff clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} onSetDone={onSetDone} getRelevantOrders={getRelevantOrders}/> :\r\n                        <Waiters clickSpecialItem={clickSpecialItem} setClickSpecialItem={setClickSpecialItem} onSetDone={onSetDone} getRelevantOrders={getRelevantOrders}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}