{"version":3,"sources":["components/Navigation/Navigation.js","components/DeleteBtn/DeleteBtn.js","components/Table/Table.js","components/Tables/Tables.js","components/Menu/Menu.js","components/Menu/tempMenu.js","components/RemoveMenu/RemoveMenu.js","components/SearchMenu/SearchMenu.js","components/Scroll.js","components/CategoryItem/CategoryItem.js","components/Orders/Orders.js","components/Statistics/Statistics.js","components/CustomizeMenu/CustomizeMenu.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","setPath","resetCategoriesState","className","onClick","DeleteBtn","tempTables","setTempTables","id","setClickCount","clickCount","updatedTempTables","filter","item","i","length","Table","setClickedTable","tableActive","Tables","path","clickedTable","tablesArray","map","user","key","orders","total","timeAdded","Date","Menu","name","price","onClickMenu","tempMenu","category","RemoveMenu","onRemoveOrderedItem","SearchMenu","setMenuSearch","onChange","e","target","value","Scroll","props","style","overflowY","border","maxHeight","children","CategoryItem","onClickCategory","categoryActive","setCategoryActive","Orders","logTables","setLogTables","selectedCategory","menuSearch","setSelectedCategory","count","forEach","arrCount","Object","entries","push","indexOfOrderedItem","indexOf","splice","priceOfSelectedItem","menuOfSelectedCategory","menuArray","selectedMenuArr","clearTable","updatedTempTable","logTotal","totalWithTip","updatedLogTables","allCategories","categoriesArray","Set","tip","Number","prompt","tipChange","tipChangeTen","Statistics","updatedLog","indexOfItem","parseFloat","toFixed","CustomizeMenu","menuInput","setMenuInput","addNewItemtoMenu","setAddNewItemtoMenu","type","updatedInput","toLowerCase","existingItems","lastKnownId","isNaN","includes","alert","updateMenu","App","useState","useEffect","allOrders","concat","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gVAceA,G,YAXI,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,qBAC1B,OACQ,wBAAIC,UAAU,SACV,wBAAIA,UAAU,QAAQC,QAAS,WAAMH,EAAQ,UAAWC,MAAxD,UACA,wBAAIC,UAAU,QAAQC,QAAS,WAAMH,EAAQ,cAAeC,MAA5D,cACA,wBAAIC,UAAU,QAAQC,QAAS,WAAMH,EAAQ,aAAcC,MAA3D,qB,OCSDG,G,YAfG,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,WAAYC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAC9D,OACI,yBAAKP,UAAU,sBACf,4BAAQA,UAAU,YAAYC,QAAS,WAEnC,IADA,IAAMO,EAAoBL,EAAWM,QAAO,SAACC,GAAD,OAAUA,EAAKL,KAAOA,KACzDM,EAAE,EAAGA,EAAEH,EAAkBI,OAAQD,IACtCH,EAAkBG,GAAGN,GAAKM,EAE9BP,EAAcI,GACdF,EAAcC,EAAa,KAN/B,QCqBOM,EAtBD,SAAC,GAA0F,IAAzFR,EAAwF,EAAxFA,GAAIP,EAAoF,EAApFA,QAASgB,EAA2E,EAA3EA,gBAAiBV,EAA0D,EAA1DA,cAAeD,EAA2C,EAA3CA,WAAYG,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAUpF,OACI,yBAAKP,WAR8B,IAA/BG,EAAWE,GAAIU,YACR,WAEA,iBAKuBV,GAAIA,GAClC,kBAAC,EAAD,CAAWA,GAAIA,EAAID,cAAeA,EAAeD,WAAYA,EAAYG,cAAeA,EAAeC,WAAYA,IACnH,uBAAGP,UAAU,aAAaC,QAAS,WAC/Ba,EAAgBT,GAChBP,EAAQ,SAAD,OAAUO,MAFrB,mDAI+CA,EAAK,MCUjDW,EA3BA,SAAC,GAA0G,IAAzGb,EAAwG,EAAxGA,WAAkBL,GAAsF,EAA5FmB,KAA4F,EAAtFnB,SAASM,EAA6E,EAA7EA,cAAeG,EAA8D,EAA9DA,WAAYD,EAAkD,EAAlDA,cAAeQ,EAAmC,EAAnCA,gBAAiBI,EAAkB,EAAlBA,aAE7FC,EAAchB,EAAWiB,KAAI,SAACC,EAAMV,GAAP,OAAa,kBAAC,EAAD,CAAOL,cAAeA,EAAeC,WAAYA,EAAYO,gBAAiBA,EAAiBhB,QAASA,EAASwB,IAAKnB,EAAWQ,GAAGN,GAAIA,GAAIF,EAAWQ,GAAGN,GAAIF,WAAYA,EAAYC,cAAeA,EAAec,aAAcA,OAElR,OACI,6BACI,yBAAKlB,UAAU,aACVmB,GAEL,4BAAQnB,UAAW,WAAYC,QAAS,WACpCK,EAAcC,EAAa,GAC3BH,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAC1BE,GAAIE,EACJgB,OAAQ,GACRC,MAAO,EACPT,aAAa,EACbU,UAAW,IAAIC,WAPvB,qBCIGC,G,MAdF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACxB,OACI,yBAAK7B,QAAS,WACV6B,EAAY,CAACF,OAAMC,WAAU7B,UAAU,iBACvC,wBAAIA,UAAU,YACV,4BAAK4B,IAET,wBAAI5B,UAAU,YACV,4BAAK6B,OCXRE,EAAW,CAAC,CACvB1B,GAAI,EACFuB,KAAM,kBACRC,MAAO,GACLG,SAAU,eAEV,CACI3B,GAAI,EACJuB,KAAM,eACNC,MAAO,GACPG,SAAU,YAEd,CACI3B,GAAI,EACJuB,KAAM,aACNC,MAAO,IACPG,SAAU,eAEd,CACI3B,GAAI,EACJuB,KAAM,YACNC,MAAO,GACPG,SAAU,WCDHC,G,MAnBI,SAAC,GAAiC,IAAhCL,EAA+B,EAA/BA,KAAMM,EAAyB,EAAzBA,oBACvB,OACI,yBAAKjC,QAAS,cAGT2B,EAAK,GAAG,EACL,yBAAK5B,UAAU,iBACX,4BAAQA,UAAU,YAAYC,QAAS,kBAAKiC,EAAoB,CAACN,WAAjE,KACA,wCAAUA,EAAK,GAAf,qBAA8BA,EAAK,MAEvC,yBAAK5B,UAAU,iBACX,4BAAQA,UAAU,YAAYC,QAAS,kBAAKiC,EAAoB,CAACN,WAAjE,KACA,wCAAUA,EAAK,GAAf,sBAA+BA,EAAK,SCJzCO,EARI,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACnB,OACE,6BACI,2BAAOC,SAAU,SAACC,GAAD,OAAOF,EAAcE,EAAEC,OAAOC,YCKxCC,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,UAAW,UACpEJ,EAAMK,WCUJC,EAbM,SAAC,GAAoE,IAAnEpB,EAAkE,EAAlEA,KAAMqB,EAA4D,EAA5DA,gBAAiBC,EAA2C,EAA3CA,eAAgBC,EAA2B,EAA3BA,kBAAmB9C,EAAQ,EAARA,GAC7E,OACE,yBAAKL,UAAS,gBAAmBK,GAAIA,IAAK6C,EAAiB,iBAAmB,GAAIjD,QAAS,WACvFgD,EAAgB,CAACrB,SACjBuB,EAAkB9C,KAElB,wBAAIL,UAAU,YACV,4BAAK4B,M,8NCAnB,IAwHewB,EAxHA,SAAC,GAA6K,IAA5KjD,EAA2K,EAA3KA,WAAYe,EAA+J,EAA/JA,aAAcd,EAAiJ,EAAjJA,cAAeiD,EAAkI,EAAlIA,UAAWC,EAAuH,EAAvHA,aAAclB,EAAyG,EAAzGA,cAA2BmB,GAA8E,EAA1FC,WAA0F,EAA9ED,kBAAkBE,EAA4D,EAA5DA,oBAAqBP,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,kBAC7JO,EAAQ,GACZvD,EAAWe,GAAcK,OAAOoC,SAAQ,SAAChD,GACrC+C,EAAM/C,IAAM+C,EAAM/C,IAAM,GAAK,KA+EjC,IA7EA,IAAIiD,EAAWC,OAAOC,QAAQJ,GAExB5B,EAAc,SAAC,GAAmB,IAAlBF,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAClBrB,EAAiB,YAAOL,GAC9BK,EAAkBU,GAAcK,OAAOwC,KAAKnC,GAC5CpB,EAAkBU,GAAcM,OAASK,EACzCrB,EAAkBU,GAAcH,aAAc,EAC9CX,EAAcI,IAGZyC,EAAkB,SAAC,GAAY,IAAXrB,EAAU,EAAVA,KACtB6B,EAAoB7B,IAGlBM,EAAsB,SAAC,GAAY,IAAXN,EAAU,EAAVA,KACpBpB,EAAiB,YAAOL,GACxB6D,EAAqBxD,EAAkBU,GAAcK,OAAO0C,QAAQrC,EAAK,IAC/EpB,EAAkBU,GAAcK,OAAO2C,OAAOF,EAAoB,GAElE,IADA,IAAIG,EAAsB,EACjBxD,EAAE,EAAGA,EAAEoB,EAASnB,OAAQD,IACzBoB,EAASpB,GAAGiB,OAASA,EAAK,KAC1BuC,EAAsBpC,EAASpB,GAAGkB,OAE1CrB,EAAkBU,GAAcM,OAAS2C,EACK,IAA1C3D,EAAkBU,GAAcM,QAChChB,EAAkBU,GAAcH,aAAc,EAC9CP,EAAkBU,GAAcO,UAAY,IAAIC,MAEpDtB,EAAcI,IAGZ4D,EAAyBrC,EAAStB,QAAO,SAACC,GAC5C,MAAyB,QAArB6C,EACO7C,EAEHA,EAAKsB,WAAauB,KAGxBc,EAAYD,EAAuBhD,KAAI,SAACV,EAAMC,GAChD,OAAO,kBAAC,EAAD,CAAMW,IAAK8C,EAAuBzD,GAAGN,GAAIA,GAAI+D,EAAuBzD,GAAGN,GAAIuB,KAAMwC,EAAuBzD,GAAGiB,KAAMC,MAAOuC,EAAuBzD,GAAGkB,MAAOC,YAAaA,OAG3KwC,EAAkBV,EAASxC,KAAI,SAACV,EAAMC,GACxC,OAAO,kBAAC,EAAD,CAAYW,IAAKX,EAAGN,GAAIM,EAAGiB,KAAMgC,EAASjD,GAAIuB,oBAAqBA,OAGxEqC,EAAa,WACf,IAAMC,EAAgB,YAAOrE,GAC7BqE,EAAiBtD,GAAgB,CAACb,GAAIa,EAAcK,OAAQ,GAAIC,MAAO,EAAGT,aAAa,EAAOU,UAAW,IAAIC,MAC7GtB,EAAcoE,IAGZC,EAAW,WACb,IAAMC,EAAevE,EAAWe,GAAcM,MACxCmD,E,yVAAgB,IAAOtB,GAC7BsB,EAAiBnD,MAAQ6B,EAAU7B,MAAQkD,EAC3CpB,EAAaqB,IAoBbC,EAAgB,CAAC,OACZjE,EAAE,EAAGA,EAAEoB,EAASnB,OAAQD,IAC7BiE,EAAcb,KAAKhC,EAASpB,GAAGqB,UAEnC,IAEM6C,EAFgB,YAAO,IAAIC,IAAIF,IAEIxD,KAAI,SAACV,EAAMC,GACjD,OAAO,kBAAC,EAAD,CAAcuC,eAAgBA,EAAgBC,kBAAmBA,EAAmBF,gBAAiBA,EAAiB3B,IAAKX,EAAGN,GAAIM,EAAGiB,KAAMlB,OAGjJ,OACI,6BACI,gDACA,yBAAKV,UAAU,aACX,kBAAC,EAAD,KACK6E,GAEL,kBAAC,EAAD,KACKR,IAGT,kBAAC,EAAD,CAAYjC,cAAeA,IAC3B,4CAAcjC,EAAWe,GAAcb,GAAK,EAA5C,kCACA,yBAAKL,UAAU,wBACX,yBAAKA,UAAU,sBACVsE,IAGT,oDAAsBnE,EAAWe,GAAcM,QAC/C,4BAAQvB,QAAS,YA9CX,WACd,IAAI8E,EAAMC,OAAOC,OAAO,kBAAmB,MACrCzE,EAAiB,YAAOL,GAC9BK,EAAkBU,GAAcM,OAASuD,EACzC3E,EAAcI,GACdiE,IACAF,IAyCYW,KADJ,iCAGA,4BAAQjF,QAAS,YAxCR,WACnB,IAAMO,EAAiB,YAAOL,GAC9BK,EAAkBU,GAAcM,OAAS,IACzCpB,EAAcI,GACdiE,IACAF,IAoCcY,KADJ,8B,8NCvHhB,IAgCeC,EAhCI,SAAC,GAA+B,IAA9B/B,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACxBI,EAAQ,GACZL,EAAU9B,OAAOoC,SAAQ,SAAChD,GACtB+C,EAAM/C,IAAM+C,EAAM/C,IAAM,GAAK,KAEjC,IAAIiD,EAAWC,OAAOC,QAAQJ,GAExBxB,EAAsB,SAAC,GAAY,IAAXN,EAAU,EAAVA,KACtByD,E,yVAAU,IAAOhC,GACjBiC,EAAcD,EAAW9D,OAAO0C,QAAQrC,EAAK,IACnDyD,EAAW9D,OAAO2C,OAAOoB,EAAa,GACtChC,EAAa+B,IAGTf,EAAkBV,EAASxC,KAAI,SAACV,EAAMC,GACxC,OAAO,kBAAC,EAAD,CAAYW,IAAKX,EAAGN,GAAIM,EAAGiB,KAAMgC,EAASjD,GAAIuB,oBAAqBA,OAG9E,OACI,6BACI,2CACA,yBAAKlC,UAAU,wBACX,yBAAKA,UAAU,sBACVsE,IAGT,uCAPJ,2DAQyDiB,WAAWlC,EAAU7B,OAAOgE,QAAQ,M,yjBC3BrG,IAoDeC,EApDO,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,UAAWC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,oBAmB/D,OACI,6BACI,4EACCD,EACD,6BACI,yDACA,2BAAOE,KAAK,OAAOzD,SAAU,SAACC,GAC1B,IAAIyD,EAAY,KAAOL,GACvBK,EAAanE,KAAOU,EAAEC,OAAOC,MAC7BmD,EAAaI,MAEjB,0DACA,2BAAOD,KAAK,OAAOzD,SAAU,SAACC,GAC1B,IAAIyD,EAAY,KAAOL,GACvBK,EAAalE,MAAQmD,OAAO1C,EAAEC,OAAOC,OACrCmD,EAAaI,MAEjB,yDACA,2BAAOD,KAAK,OAAOzD,SAAU,SAACC,GAC1B,IAAIyD,EAAY,KAAOL,GACvBK,EAAa/D,SAAWM,EAAEC,OAAOC,MAAMwD,cACvCL,EAAaI,MAEjB,4BAAQ9F,QAAS,kBAzCV,WAEf,IADA,IAAIgG,EAAgB,GACXtF,EAAE,EAAGA,EAAEoB,EAASnB,OAAQD,IAC7BsF,EAAclC,KAAKhC,EAASpB,GAAGiB,KAAKoE,eAExC,IAAIE,EAAcnE,EAASA,EAASnB,OAAS,GAAGP,GAChD,GAAIqF,EAAU9D,KAAKhB,OAAS,IAAMuF,MAAMnB,OAAOU,EAAU7D,SAAW6D,EAAU1D,SAASpB,OAAS,EAAG,CAC/F,GAAIqF,EAAcG,SAASV,EAAU9D,KAAKoE,eACtC,OAAOK,MAAM,YAAD,OAAaX,EAAU9D,KAAvB,qDAEhBG,EAASgC,KAAK,CAAC1D,GAAI6F,EAAc,EAAGtE,KAAM8D,EAAU9D,KAAMC,MAAO6D,EAAU7D,MAAOG,SAAU0D,EAAU1D,WACtG6D,GAAoB,QAEpBQ,MAAM,sCA4BoBC,KAAtB,aAEA,6BACI,4BAAQrG,QAAS,kBAAM4F,GAAoB,KAA3C,0B,8NCSLU,MAjDf,WAAe,MAEuBC,mBAAS,GAFhC,mBAENjG,EAFM,KAEMD,EAFN,OAGWkG,mBAAS,UAHpB,mBAGNvF,EAHM,KAGAnB,EAHA,OAI2B0G,mBAAS,GAJpC,mBAINtF,EAJM,KAIQJ,EAJR,OAKqB0F,mBAAS,CAACjF,OAAQ,GAAIC,MAAO,IALlD,mBAKN6B,EALM,KAKKC,EALL,OAMuBkD,mBAAS,IANhC,mBAMNhD,EANM,KAMMpB,EANN,OAOqBoE,mBAAS,CAAC5E,KAAM,GAAIC,MAAO,EAAGG,SAAU,KAP7D,mBAON0D,EAPM,KAOKC,EAPL,OAQmCa,oBAAS,GAR5C,mBAQNZ,EARM,KAQYC,EARZ,OASmCW,mBAAS,OAT5C,mBASNjD,EATM,KASYE,EATZ,OAU+B+C,mBAAS,GAVxC,mBAUNtD,EAVM,KAUUC,EAVV,OAWuBqD,mBAAS,CAAC,CAC5CnG,GAAI,EACJkB,OAAQ,GACRC,MAAO,EACPT,aAAa,EACbU,UAAW,IAAIC,QAhBJ,mBAWNvB,EAXM,KAWMC,EAXN,KAmCb,OAhBEqG,qBAAU,WAGN,IAFA,IAAM9B,E,yVAAgB,IAAOtB,GACzBqD,EAAY,GACP/F,EAAI,EAAGA,EAAIR,EAAWS,OAAQD,IACnC+F,EAAYA,EAAUC,OAAOxG,EAAWQ,GAAGY,QAE/CoD,EAAiBpD,OAASmF,EAC1BpD,EAAaqB,KACd,CAACxE,IASF,yBAAKH,UAAU,OACb,kBAAC,EAAD,CAAYD,qBARa,WACzBoD,EAAkB,GAClBM,EAAoB,QAMoC3D,QAASA,IACvD,WAATmB,EACG,kBAAC,EAAD,CAAQC,aAAcA,EAAcJ,gBAAiBA,EAAiBP,WAAYA,EAAYD,cAAeA,EAAeF,cAAeA,EAAeD,WAAYA,EAAYc,KAAMA,EAAMnB,QAASA,IACrMmB,EAAKmF,SAAL,UACE,kBAAC,EAAD,CAAQlD,eAAgBA,EAAgBC,kBAAmBA,EAAmBI,iBAAkBA,EAAkBE,oBAAqBA,EAAqBD,WAAYA,EAAYpB,cAAeA,EAAeiB,UAAWA,EAAWC,aAAcA,EAAcnD,WAAYA,EAAYe,aAAcA,EAAcd,cAAeA,IAAmBa,EAAKmF,SAAS,aACxW,kBAAC,EAAD,CAAeR,iBAAkBA,EAAkBC,oBAAqBA,EAAqBH,UAAWA,EAAWC,aAAcA,IACjI,kBAAC,EAAD,CAAYrC,aAAcA,EAAcnD,WAAYA,EAAYkD,UAAWA,MCvCvEuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4d2b1539.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({setPath, resetCategoriesState}) => {\r\n    return (\r\n            <ul className='NavUl'>\r\n                <li className='NavLi' onClick={()=> {setPath('tables'); resetCategoriesState();}}>Tables</li>\r\n                <li className='NavLi' onClick={()=> {setPath('Statistics'); resetCategoriesState();}}>Statistics</li>\r\n                <li className='NavLi' onClick={()=> {setPath('customize'); resetCategoriesState();}}>Customize menu</li>\r\n            </ul>\r\n        );\r\n\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst DeleteBtn = ({tempTables, setTempTables, id, setClickCount, clickCount}) => {\r\n    return (\r\n        <div className='deleteBtnContainer'>\r\n        <button className='deleteBtn' onClick={()=> {\r\n            const updatedTempTables = tempTables.filter((item) => item.id !== id);\r\n            for (let i=0; i<updatedTempTables.length; i++) {\r\n                updatedTempTables[i].id = i;\r\n            }\r\n            setTempTables(updatedTempTables);\r\n            setClickCount(clickCount - 1);\r\n        }}>X</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteBtn;","import React from 'react';\r\nimport './Table.css'\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst Table = ({id, setPath, setClickedTable, setTempTables, tempTables, setClickCount, clickCount}) => {\r\n\r\n    const setActiveTable = () => {\r\n        if (tempTables[id].tableActive === false) {\r\n            return 'tableDiv'\r\n        } else {\r\n            return 'activeTableDiv'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={setActiveTable()} id={id}>\r\n            <DeleteBtn id={id} setTempTables={setTempTables} tempTables={tempTables} setClickCount={setClickCount} clickCount={clickCount}/>\r\n            <p className='clickTable' onClick={()=> {\r\n                setClickedTable(id);\r\n                setPath(`order_${id}`)}\r\n\r\n            }>{`Click here to view and edit table number ${id + 1}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\nimport './Tables.css';\r\nimport Table from \"../Table/Table\";\r\n\r\nconst Tables = ({tempTables, path, setPath, setTempTables, clickCount, setClickCount, setClickedTable, clickedTable}) => {\r\n\r\n    const tablesArray = tempTables.map((user, i) => <Table setClickCount={setClickCount} clickCount={clickCount} setClickedTable={setClickedTable} setPath={setPath} key={tempTables[i].id} id={tempTables[i].id} tempTables={tempTables} setTempTables={setTempTables} clickedTable={clickedTable} /> );\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                {tablesArray}\r\n            </div>\r\n            <button className={'addTable'} onClick={()=> {\r\n                setClickCount(clickCount + 1);\r\n                setTempTables([...tempTables, {\r\n                    id: clickCount,\r\n                    orders: [],\r\n                    total: 0,\r\n                    tableActive: false,\r\n                    timeAdded: new Date()\r\n                }])\r\n\r\n            }\r\n            }>\r\n                Add a new table\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tables;","import React from 'react';\r\nimport './Menu.css';\r\n\r\nconst Menu = ({name, price, onClickMenu}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n            onClickMenu({name, price})}} className='menuContainer'>\r\n            <ul className='menuItem'>\r\n                <li>{name}</li>\r\n            </ul>\r\n            <ul className='menuItem'>\r\n                <li>{price}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","export const tempMenu = [{\r\n  id: 1,\r\n    name: 'grilled chicken',\r\n  price: 80,\r\n    category: 'main dishes'\r\n},\r\n    {\r\n        id: 2,\r\n        name: 'ceaser salad',\r\n        price: 55,\r\n        category: 'starters'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'beef steak',\r\n        price: 120,\r\n        category: 'main dishes'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'pepperony',\r\n        price: 90,\r\n        category: 'pizzas'\r\n    }];","import React from 'react';\r\n\r\nconst RemoveMenu = ({name, onRemoveOrderedItem}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n\r\n        }}>\r\n            {name[1]<2 ?\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name})}>X</button>\r\n                    <span>{`${name[1]} plate of ${name[0]}`}</span>\r\n                </div> :\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name})}>X</button>\r\n                    <span>{`${name[1]} plates of ${name[0]}`}</span>\r\n                </div>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoveMenu;","import React from 'react';\r\n\r\nconst SearchMenu = ({setMenuSearch}) => {\r\n  return (\r\n    <div>\r\n        <input onChange={(e) => setMenuSearch(e.target.value)}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMenu;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '3px solid black', maxHeight: '250px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst CategoryItem = ({name, onClickCategory, categoryActive, setCategoryActive, id}) => {\r\n    return (\r\n      <div className={`menuContainer`} id={id===categoryActive ? 'categoryActive' : ''} onClick={() => {\r\n          onClickCategory({name});\r\n          setCategoryActive(id);\r\n      }}>\r\n          <ul className='menuItem'>\r\n              <li>{name}</li>\r\n          </ul>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default CategoryItem;","import React from 'react';\r\nimport Menu from \"../Menu/Menu\";\r\nimport {tempMenu} from \"../Menu/tempMenu\";\r\nimport './Orders.css'\r\nimport RemoveMenu from \"../RemoveMenu/RemoveMenu\";\r\nimport SearchMenu from \"../SearchMenu/SearchMenu\";\r\nimport Scroll from \"../Scroll\";\r\nimport CategoryItem from \"../CategoryItem/CategoryItem\";\r\n\r\nconst Orders = ({tempTables, clickedTable, setTempTables, logTables, setLogTables, setMenuSearch, menuSearch, selectedCategory, setSelectedCategory, categoryActive, setCategoryActive}) => {\r\n    let count = {};\r\n    tempTables[clickedTable].orders.forEach((i) => {\r\n        count[i] = (count[i] || 0) + 1;\r\n    });\r\n    let arrCount = Object.entries(count);\r\n\r\n    const onClickMenu = ({name, price}) => {\r\n        const updatedTempTables = [...tempTables];\r\n        updatedTempTables[clickedTable].orders.push(name);\r\n        updatedTempTables[clickedTable].total += price;\r\n        updatedTempTables[clickedTable].tableActive = true;\r\n        setTempTables(updatedTempTables);\r\n    };\r\n\r\n    const onClickCategory = ({name}) => {\r\n        setSelectedCategory(name);\r\n    };\r\n\r\n    const onRemoveOrderedItem = ({name}) => {\r\n        const updatedTempTables = [...tempTables];\r\n        const indexOfOrderedItem = updatedTempTables[clickedTable].orders.indexOf(name[0]);\r\n        updatedTempTables[clickedTable].orders.splice(indexOfOrderedItem, 1);\r\n        let priceOfSelectedItem = 0;\r\n        for (let i=0; i<tempMenu.length; i++)\r\n            if (tempMenu[i].name === name[0]) {\r\n                priceOfSelectedItem = tempMenu[i].price;\r\n            }\r\n        updatedTempTables[clickedTable].total -= priceOfSelectedItem;\r\n        if (updatedTempTables[clickedTable].total === 0) {\r\n            updatedTempTables[clickedTable].tableActive = false;\r\n            updatedTempTables[clickedTable].timeAdded = new Date();\r\n        }\r\n        setTempTables(updatedTempTables);\r\n    };\r\n\r\n    const menuOfSelectedCategory = tempMenu.filter((item) => {\r\n        if (selectedCategory === 'All') {\r\n            return item;\r\n        }\r\n        return  item.category === selectedCategory;\r\n    });\r\n\r\n    const menuArray = menuOfSelectedCategory.map((item, i) => {\r\n        return <Menu key={menuOfSelectedCategory[i].id} id={menuOfSelectedCategory[i].id} name={menuOfSelectedCategory[i].name} price={menuOfSelectedCategory[i].price} onClickMenu={onClickMenu}/>\r\n    });\r\n\r\n    const selectedMenuArr = arrCount.map((item, i)=> {\r\n        return <RemoveMenu key={i} id={i} name={arrCount[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    const clearTable = () => {\r\n        const updatedTempTable = [...tempTables];\r\n        updatedTempTable[clickedTable] = {id: clickedTable, orders: [], total: 0, tableActive: false, timeAdded: new Date()};\r\n        setTempTables(updatedTempTable);\r\n    };\r\n\r\n    const logTotal = () => {\r\n        const totalWithTip = tempTables[clickedTable].total;\r\n        const updatedLogTables = {...logTables};\r\n        updatedLogTables.total = logTables.total + totalWithTip;\r\n        setLogTables(updatedLogTables);\r\n    };\r\n\r\n    const tipChange = () => {\r\n        let tip = Number(prompt('Is there a tip?', '0'));\r\n        const updatedTempTables = [...tempTables];\r\n        updatedTempTables[clickedTable].total += tip;\r\n        setTempTables(updatedTempTables);\r\n        logTotal();\r\n        clearTable();\r\n    };\r\n\r\n    const tipChangeTen = () => {\r\n      const updatedTempTables = [...tempTables];\r\n      updatedTempTables[clickedTable].total *= 1.1;\r\n      setTempTables(updatedTempTables);\r\n      logTotal();\r\n      clearTable();\r\n    };\r\n\r\n    let allCategories = ['All'];\r\n    for (let i=0; i<tempMenu.length; i++) {\r\n        allCategories.push(tempMenu[i].category)\r\n    }\r\n    const uniqueCategories = [...new Set(allCategories)];\r\n\r\n    const categoriesArray = uniqueCategories.map((item, i) => {\r\n       return <CategoryItem categoryActive={categoryActive} setCategoryActive={setCategoryActive} onClickCategory={onClickCategory} key={i} id={i} name={item}/>\r\n    });\r\n\r\n        return (\r\n            <div>\r\n                <h1>This is da menu!</h1>\r\n                <div className='menuArray'>\r\n                    <Scroll>\r\n                        {categoriesArray}\r\n                    </Scroll>\r\n                    <Scroll>\r\n                        {menuArray}\r\n                    </Scroll>\r\n                </div>\r\n                <SearchMenu setMenuSearch={setMenuSearch}/>\r\n                <h1>{`Table ${tempTables[clickedTable].id + 1} ordered the following items:`}</h1>\r\n                <div className='containerOfContainer'>\r\n                    <div className='menuArrayContainer'>\r\n                        {selectedMenuArr}\r\n                    </div>\r\n                </div>\r\n                <p>{`For a total of ${tempTables[clickedTable].total}`}</p>\r\n                <button onClick={()=> {\r\n                    tipChange()\r\n                }}>Checkout and add a custom tip</button>\r\n                <button onClick={()=> {\r\n                    tipChangeTen()\r\n                }}>Checkout and add 10% tip</button>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Orders;","import React from 'react';\r\nimport RemoveMenu from \"../RemoveMenu/RemoveMenu\";\r\n\r\nconst Statistics = ({logTables, setLogTables}) => {\r\n    let count = {};\r\n    logTables.orders.forEach((i) => {\r\n        count[i] = (count[i] || 0) + 1;\r\n    });\r\n    let arrCount = Object.entries(count);\r\n\r\n    const onRemoveOrderedItem = ({name}) => {\r\n      const updatedLog = {...logTables};\r\n      const indexOfItem = updatedLog.orders.indexOf(name[0]);\r\n      updatedLog.orders.splice(indexOfItem, 1);\r\n      setLogTables(updatedLog);\r\n    };\r\n\r\n    const selectedMenuArr = arrCount.map((item, i)=> {\r\n        return <RemoveMenu key={i} id={i} name={arrCount[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>To Do list:</h2>\r\n            <div className='containerOfContainer'>\r\n                <div className='menuArrayContainer'>\r\n                    {selectedMenuArr}\r\n                </div>\r\n            </div>\r\n            <h2>Income:</h2>\r\n            {`The total revenue from all checked out tables is ${parseFloat(logTables.total).toFixed(2)}`}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport {tempMenu} from \"../Menu/tempMenu\";\r\n\r\nconst CustomizeMenu = ({menuInput, setMenuInput, addNewItemtoMenu, setAddNewItemtoMenu}) => {\r\n    const updateMenu = () => {\r\n        let existingItems = [];\r\n        for (let i=0; i<tempMenu.length; i++) {\r\n            existingItems.push(tempMenu[i].name.toLowerCase());\r\n        }\r\n        let lastKnownId = tempMenu[tempMenu.length - 1].id;\r\n        if (menuInput.name.length > 0 && !isNaN(Number(menuInput.price)) && menuInput.category.length > 0) {\r\n            if (existingItems.includes(menuInput.name.toLowerCase())) {\r\n                return alert(`The dish ${menuInput.name} already exists, please enter a unique dish name`);\r\n            }\r\n            tempMenu.push({id: lastKnownId + 1, name: menuInput.name, price: menuInput.price, category: menuInput.category});\r\n            setAddNewItemtoMenu(false);\r\n        } else {\r\n            alert(\"Please enter correct dish details.\");\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Here you will be able to customize your menu</h2>\r\n            {addNewItemtoMenu ?\r\n            <div>\r\n                <span>Please enter dish name:</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.name = e.target.value;\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <span>Please enter dish price:</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.price = Number(e.target.value);\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <span>Please enter a category</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.category = e.target.value.toLowerCase();\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <button onClick={()=> updateMenu()}>Add dish</button>\r\n            </div> :\r\n                <div>\r\n                    <button onClick={() => setAddNewItemtoMenu(true)}>Add a new menu item</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomizeMenu;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Navigation from \"../components/Navigation/Navigation\";\nimport Tables from \"../components/Tables/Tables\";\nimport Orders from \"../components/Orders/Orders\";\nimport Statistics from \"../components/Statistics/Statistics\";\nimport CustomizeMenu from \"../components/CustomizeMenu/CustomizeMenu\";\n\nfunction App() {\n  /*const [tables, setTables] = useState([]);*/\n  const [clickCount, setClickCount] = useState(1);\n  const [path, setPath] = useState('tables');\n  const [clickedTable, setClickedTable] = useState(0);\n  const [logTables, setLogTables] = useState({orders: [], total: 0});\n  const [menuSearch, setMenuSearch] = useState('');\n  const [menuInput, setMenuInput] = useState({name: '', price: 0, category: ''});\n  const [addNewItemtoMenu, setAddNewItemtoMenu] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [categoryActive, setCategoryActive] = useState(0);\n  const [tempTables, setTempTables] = useState([{\n    id: 0,\n    orders: [],\n    total: 0,\n    tableActive: false,\n    timeAdded: new Date()\n  }]);\n\n    useEffect(()=> {\n        const updatedLogTables = {...logTables};\n        let allOrders = [];\n        for (let i = 0; i < tempTables.length; i++) {\n            allOrders = allOrders.concat(tempTables[i].orders);\n        }\n        updatedLogTables.orders = allOrders;\n        setLogTables(updatedLogTables);\n    }, [tempTables]);\n\n    const resetCategoriesState = () => {\n        setCategoryActive(0);\n        setSelectedCategory('All')\n    };\n\n\n  return (\n      <div className=\"App\">\n        <Navigation resetCategoriesState={resetCategoriesState} setPath={setPath} />\n        {path === 'tables' ?\n            <Tables clickedTable={clickedTable} setClickedTable={setClickedTable} clickCount={clickCount} setClickCount={setClickCount} setTempTables={setTempTables} tempTables={tempTables} path={path} setPath={setPath}/>\n            : path.includes(`order_`) ?\n                <Orders categoryActive={categoryActive} setCategoryActive={setCategoryActive} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} menuSearch={menuSearch} setMenuSearch={setMenuSearch} logTables={logTables} setLogTables={setLogTables} tempTables={tempTables} clickedTable={clickedTable} setTempTables={setTempTables}/> : path.includes('customize') ?\n                <CustomizeMenu addNewItemtoMenu={addNewItemtoMenu} setAddNewItemtoMenu={setAddNewItemtoMenu} menuInput={menuInput} setMenuInput={setMenuInput} /> :\n                <Statistics setLogTables={setLogTables} tempTables={tempTables} logTables={logTables}/>\n        }\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}