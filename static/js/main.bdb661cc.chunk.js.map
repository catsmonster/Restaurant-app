{"version":3,"sources":["components/Navigation/Navigation.js","components/DeleteBtn/DeleteBtn.js","components/Table/Table.js","components/Tables/Tables.js","components/Menu/tempMenu.js","components/RemoveMenu/RemoveMenu.js","components/Scroll.js","components/Menu/Menu.js","components/CategoryItem/CategoryItem.js","components/SearchMenu/SearchMenu.js","components/Menu/CategoriesWithMenu.js","components/Orders/Orders.js","components/ToDoMenu/ToDoMenu.js","components/Statistics/Statistics.js","components/CustomizeMenu/CustomizeMenu.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","setPath","resetWhenChangingPath","setNavActive","navActive","className","onClick","DeleteBtn","tempTables","setTempTables","id","setClickCount","clickCount","updatedTempTables","filter","item","i","length","Table","setClickedTable","tableActive","Tables","path","clickedTable","tablesArray","map","user","key","orders","total","timeAdded","Date","tempMenu","name","price","category","RemoveMenu","onRemoveOrderedItem","Scroll","props","style","overflowY","maxHeight","margin","children","Menu","onClickMenu","CategoryItem","onClickCategory","categoryActive","setCategoryActive","SearchMenu","setMenuSearch","onChange","e","target","value","CategoriesWithMenu","setSelectedCategory","menuSearch","selectedCategory","includes","push","status","time","table","console","log","menuOfSelectedCategory","toLowerCase","menuArray","allCategories","categoriesArray","Set","Orders","logTables","setLogTables","getRelevantOrders","enumerateOrders","waitingOrders","preparedOrders","ordersToDisplay","concat","arrCount","indexOfOrderedItem","findIndex","splice","priceOfSelectedItem","selectedMenuArr","deliveredOrders","deliveredOrdersArr","clearTable","updatedTempTable","logTotal","totalWithTip","updatedLogTables","alert","tip","Number","prompt","tipChange","tipChangeTen","ToDoMenu","onSetDone","Statistics","updateTempTables","indexOfSelectedOrder","order","getTime","waitingArray","deliveredArray","deliveredMenuArr","parseFloat","toFixed","CustomizeMenu","menuInput","setMenuInput","addNewItemtoMenu","setAddNewItemtoMenu","type","updatedInput","Math","abs","existingItems","lastKnownId","isNaN","updateMenu","App","useState","tempWaitingOrders","flat","sort","a","b","ordersDetailsArray","relevantOrders","orderNamesArr","count","forEach","Object","entries","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdb661cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({setPath, resetWhenChangingPath, setNavActive, navActive}) => {\r\n\r\n    return (\r\n            <ul className='NavUl'>\r\n                <li className={`NavLi ${navActive===0 ? 'navActive' : ''}`} onClick={()=> {setPath('tables'); resetWhenChangingPath(); setNavActive(0);}}>Tables</li>\r\n                <li className={`NavLi ${navActive===1 ? 'navActive' : ''}`} onClick={()=> {setPath('Statistics'); resetWhenChangingPath(); setNavActive(1);}}>Manage Orders</li>\r\n                <li className={`NavLi ${navActive===2 ? 'navActive' : ''}`} onClick={()=> {setPath('customize'); resetWhenChangingPath(); setNavActive(2);}}>Customize menu</li>\r\n            </ul>\r\n        );\r\n\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst DeleteBtn = ({tempTables, setTempTables, id, setClickCount, clickCount}) => {\r\n    return (\r\n        <div className='deleteBtnContainer'>\r\n        <button className='deleteBtn' onClick={()=> {\r\n            const updatedTempTables = tempTables.filter((item) => item.id !== id);\r\n            for (let i=0; i<updatedTempTables.length; i++) {\r\n                updatedTempTables[i].id = i;\r\n            }\r\n            setTempTables(updatedTempTables);\r\n            setClickCount(clickCount - 1);\r\n        }}>X</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteBtn;","import React from 'react';\r\nimport './Table.css'\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst Table = ({id, setPath, setClickedTable, setTempTables, tempTables, setClickCount, clickCount}) => {\r\n\r\n    const setActiveTable = () => {\r\n        if (tempTables[id].tableActive === 'false') {\r\n            return 'tableDiv'\r\n        } else if (tempTables[id].tableActive === 'waiting') {\r\n            return 'activeTableDiv'\r\n        } else {\r\n            return 'eatingTableDiv'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={setActiveTable()} id={id}>\r\n            <DeleteBtn id={id} setTempTables={setTempTables} tempTables={tempTables} setClickCount={setClickCount} clickCount={clickCount}/>\r\n            <p className='clickTable' onClick={()=> {\r\n                setClickedTable(id);\r\n                setPath(`order_${id}`)}\r\n\r\n            }>{`Click here to view and edit table number ${id + 1}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\nimport './Tables.css';\r\nimport Table from \"../Table/Table\";\r\n\r\nconst Tables = ({tempTables, path, setPath, setTempTables, clickCount, setClickCount, setClickedTable, clickedTable}) => {\r\n\r\n    const tablesArray = tempTables.map((user, i) => <Table setClickCount={setClickCount} clickCount={clickCount} setClickedTable={setClickedTable} setPath={setPath} key={tempTables[i].id} id={tempTables[i].id} tempTables={tempTables} setTempTables={setTempTables} clickedTable={clickedTable} /> );\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                {tablesArray}\r\n            </div>\r\n            <button className={'addTable'} onClick={()=> {\r\n                setClickCount(clickCount + 1);\r\n                setTempTables([...tempTables, {\r\n                    id: clickCount,\r\n                    orders: [],\r\n                    total: 0,\r\n                    tableActive: 'false',\r\n                    timeAdded: new Date()\r\n                }])\r\n\r\n            }\r\n            }>\r\n                Add a new table\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tables;","export const tempMenu = [{\r\n  id: 1,\r\n    name: 'grilled chicken',\r\n  price: 80,\r\n    category: 'main dishes'\r\n},\r\n    {\r\n        id: 2,\r\n        name: 'ceaser salad',\r\n        price: 55,\r\n        category: 'starters'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'beef steak',\r\n        price: 120,\r\n        category: 'main dishes'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'pepperony',\r\n        price: 90,\r\n        category: 'pizzas'\r\n    }];","import React from 'react';\r\n\r\nconst RemoveMenu = ({name, onRemoveOrderedItem}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n\r\n        }}>\r\n            {name[1]<2 ?\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name})}>X</button>\r\n                    <span>{`${name[1]} plate of ${name[0]}`}</span>\r\n                </div> :\r\n                <div className='foodContainer'>\r\n                    <button className='deleteBtn' onClick={()=> onRemoveOrderedItem({name})}>X</button>\r\n                    <span>{`${name[1]} plates of ${name[0]}`}</span>\r\n                </div>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoveMenu;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', maxHeight: '250px', margin: '1%' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './Menu.css';\r\n\r\nconst Menu = ({name, price, onClickMenu}) => {\r\n    return (\r\n        <div onClick={()=> {\r\n            onClickMenu({name, price})}} className='menuContainer'>\r\n            <span className='menuItem'>\r\n                {name}\r\n            </span>\r\n            <span className='menuItem'>\r\n                {price}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst CategoryItem = ({name, onClickCategory, categoryActive, setCategoryActive, id}) => {\r\n    return (\r\n      <div className={`menuContainer`} id={id===categoryActive ? 'categoryActive' : ''} onClick={() => {\r\n          onClickCategory({name});\r\n          setCategoryActive(id);\r\n      }}>\r\n          <span className='menuItem'>\r\n              {name}\r\n          </span>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default CategoryItem;","import React from 'react';\r\n\r\nconst SearchMenu = ({setMenuSearch}) => {\r\n  return (\r\n    <div>\r\n        <input onChange={(e) => setMenuSearch(e.target.value)}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMenu;","import React from 'react';\r\nimport {tempMenu} from \"./tempMenu\";\r\nimport Menu from \"./Menu\";\r\nimport CategoryItem from \"../CategoryItem/CategoryItem\";\r\nimport Scroll from \"../Scroll\";\r\nimport SearchMenu from \"../SearchMenu/SearchMenu\";\r\n\r\nconst CategoriesWithMenu = ({tempTables, clickedTable, setTempTables, path, setSelectedCategory, setMenuSearch, menuSearch, selectedCategory, categoryActive, setCategoryActive}) => {\r\n    const onClickMenu = ({name, price}) => {\r\n        const updatedTempTables = [...tempTables];\r\n        if (path.includes('order_')) {\r\n            updatedTempTables[clickedTable].orders.push({name: name, status: 'waiting', time: new Date(), table: clickedTable});\r\n            updatedTempTables[clickedTable].total += price;\r\n            updatedTempTables[clickedTable].tableActive = 'waiting';\r\n        } else {\r\n            console.log('This is the customize categories page');\r\n        }\r\n        setTempTables(updatedTempTables);\r\n    };\r\n\r\n    const onClickCategory = ({name}) => {\r\n        setSelectedCategory(name);\r\n        setMenuSearch('');\r\n    };\r\n\r\n    const menuOfSelectedCategory = tempMenu.filter((item) => {\r\n        if (selectedCategory === 'All' && !menuSearch.length > 0) {\r\n            return item;\r\n        } else if (menuSearch.length > 0) {\r\n            return item.name.toLowerCase().includes(menuSearch.toLowerCase());\r\n        }\r\n        return item.category === selectedCategory;\r\n    });\r\n\r\n    const menuArray = menuOfSelectedCategory.map((item, i) => {\r\n        return <Menu key={menuOfSelectedCategory[i].id} id={menuOfSelectedCategory[i].id} name={menuOfSelectedCategory[i].name} price={menuOfSelectedCategory[i].price} onClickMenu={onClickMenu}/>\r\n    });\r\n\r\n    let allCategories = ['All'];\r\n    for (let i=0; i<tempMenu.length; i++) {\r\n        allCategories.push(tempMenu[i].category)\r\n    }\r\n    const uniqueCategories = [...new Set(allCategories)];\r\n\r\n    const categoriesArray = uniqueCategories.map((item, i) => {\r\n        return <CategoryItem categoryActive={categoryActive} setCategoryActive={setCategoryActive} onClickCategory={onClickCategory} key={i} id={i} name={item}/>\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='menuArray'>\r\n                <Scroll>\r\n                    {categoriesArray}\r\n                </Scroll>\r\n                <Scroll>\r\n                    {menuArray}\r\n                </Scroll>\r\n            </div>\r\n            <div className='searchContainer'>\r\n                <span id='searchText'>Search menu item:</span>\r\n                <SearchMenu setMenuSearch={setMenuSearch}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoriesWithMenu;","import React from 'react';\r\nimport {tempMenu} from \"../Menu/tempMenu\";\r\nimport './Orders.css'\r\nimport RemoveMenu from \"../RemoveMenu/RemoveMenu\";\r\nimport Scroll from \"../Scroll\";\r\nimport CategoriesWithMenu from \"../Menu/CategoriesWithMenu\";\r\n\r\nconst Orders = ({path, tempTables, clickedTable, setTempTables, logTables, setLogTables, setMenuSearch, menuSearch, selectedCategory, setSelectedCategory, categoryActive, setCategoryActive, getRelevantOrders, enumerateOrders}) => {\r\n\r\n\r\n    const waitingOrders = getRelevantOrders('waiting');\r\n    const preparedOrders = getRelevantOrders('prepared');\r\n    const ordersToDisplay = waitingOrders.concat(preparedOrders);\r\n\r\n    const arrCount = enumerateOrders(ordersToDisplay);\r\n\r\n    const onRemoveOrderedItem = ({name}) => {\r\n        const updatedTempTables = [...tempTables];\r\n        const orderedItemsArr = updatedTempTables[clickedTable].orders;\r\n        const indexOfOrderedItem = orderedItemsArr.findIndex((item) => item.name === name[0]);\r\n        updatedTempTables[clickedTable].orders.splice(indexOfOrderedItem, 1);\r\n        let priceOfSelectedItem = 0;\r\n        for (let i=0; i<tempMenu.length; i++)\r\n            if (tempMenu[i].name === name[0]) {\r\n                priceOfSelectedItem = tempMenu[i].price;\r\n            }\r\n        updatedTempTables[clickedTable].total -= priceOfSelectedItem;\r\n        if (updatedTempTables[clickedTable].total === 0) {\r\n            updatedTempTables[clickedTable].tableActive = 'false';\r\n            updatedTempTables[clickedTable].timeAdded = new Date();\r\n        }\r\n        setTempTables(updatedTempTables);\r\n    };\r\n\r\n    const selectedMenuArr = arrCount.map((item, i)=> {\r\n        return <RemoveMenu key={i} id={i} name={arrCount[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    const tempDeliveredOrders = getRelevantOrders('delivered');\r\n    const deliveredOrders = enumerateOrders(tempDeliveredOrders);\r\n\r\n    const deliveredOrdersArr = deliveredOrders.map((item, i)=> {\r\n        return <RemoveMenu key={i} id={i} name={deliveredOrders[i]} onRemoveOrderedItem={onRemoveOrderedItem} />\r\n    });\r\n\r\n    const clearTable = () => {\r\n        const updatedTempTable = [...tempTables];\r\n        updatedTempTable[clickedTable] = {id: clickedTable, orders: [], total: 0, tableActive: 'false', timeAdded: new Date()};\r\n        setTempTables(updatedTempTable);\r\n    };\r\n\r\n    const logTotal = () => {\r\n        const totalWithTip = tempTables[clickedTable].total;\r\n        const updatedLogTables = {...logTables};\r\n        updatedLogTables.total = logTables.total + totalWithTip;\r\n        setLogTables(updatedLogTables);\r\n    };\r\n\r\n    const tipChange = () => {\r\n        let tip = Number(prompt('Is there a tip?', '0'));\r\n        const updatedTempTables = [...tempTables];\r\n        updatedTempTables[clickedTable].total += tip;\r\n        setTempTables(updatedTempTables);\r\n        logTotal();\r\n        clearTable();\r\n    };\r\n\r\n    const tipChangeTen = () => {\r\n      const updatedTempTables = [...tempTables];\r\n      updatedTempTables[clickedTable].total *= 1.1;\r\n      setTempTables(updatedTempTables);\r\n      logTotal();\r\n      clearTable();\r\n    };\r\n\r\n        return (\r\n            <div>\r\n                <h1>This is da menu!</h1>\r\n                <CategoriesWithMenu setTempTables={setTempTables} setCategoryActive={setCategoryActive} categoryActive={categoryActive} setMenuSearch={setMenuSearch} tempTables={tempTables} path={path} clickedTable={clickedTable} menuSearch={menuSearch} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory}/>\r\n                <h1>{`Table ${tempTables[clickedTable].id + 1} ordered the following items:`}</h1>\r\n                {selectedMenuArr.length > 0 && deliveredOrdersArr.length > 0 ?\r\n                    <div className='orderHeaders'>\r\n                        <h3 className='waitingHeader'>Items waiting:</h3>\r\n                        <h3 className='deliveredHeader'>Items delivered:</h3>\r\n                    </div> : selectedMenuArr.length > 0 ?\r\n                    <div className='orderHeaders'>\r\n                        <h3 className='waitingHeader'>Items waiting:</h3>\r\n                    </div> : deliveredOrdersArr.length > 0 ?\r\n                        <div className='orderHeaders'>\r\n                            <h3 className='deliveredHeader'>Items delivered:</h3>\r\n                        </div> :\r\n                            <div></div>\r\n                }\r\n                    <div className='menuArrayContainer'>\r\n                        <div className='selectedMenu'>\r\n                            <Scroll>\r\n                                {selectedMenuArr}\r\n                            </Scroll>\r\n                        </div>\r\n                        <div className='selectedMenu'>\r\n                            <Scroll>\r\n                                {deliveredOrdersArr}\r\n                            </Scroll>\r\n                        </div>\r\n                    </div>\r\n                <p>{`For a total of ${tempTables[clickedTable].total}`}</p>\r\n                <button className='addTable' onClick={()=> {\r\n                    if (ordersToDisplay.length > 0) {\r\n                        alert('Table has not yet received all orders!')\r\n                    } else {\r\n                        tipChange()\r\n                    }\r\n                }}>Checkout and add a custom tip</button>\r\n                <button className='addTable' onClick={()=> {\r\n                    if (ordersToDisplay.length > 0) {\r\n                        alert('Table has not yet received all orders!')\r\n                    } else {\r\n                        tipChangeTen()\r\n                    }\r\n                }}>Checkout and add 10% tip</button>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Orders;","import React from 'react';\r\nimport './ToDoMenu.css'\r\n\r\nconst ToDoMenu = ({name, onSetDone, time, table, status}) => {\r\n    return (\r\n        <div className='todoList'>\r\n            <span>\r\n                {`Order ${name} of table ${table+1}`}\r\n            </span>\r\n            {status === 'waiting' ?\r\n                <button className='addTable' onClick={() => onSetDone({time, table, status})}>Prepared</button> :\r\n                <button className='addTable' onClick={() => onSetDone({time, table, status})}>Delivered</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoMenu;","import React from 'react';\r\nimport ToDoMenu from \"../ToDoMenu/ToDoMenu\";\r\nimport Scroll from \"../Scroll\";\r\n\r\nconst Statistics = ({logTables, tempTables, setTempTables, getRelevantOrders}) => {\r\n\r\n\r\n    const onSetDone = ({time, table, status}) => {\r\n      const updateTempTables = [...tempTables];\r\n      const indexOfSelectedOrder = updateTempTables[table].orders.findIndex((order) => order.time.getTime() === time);\r\n      if (status === 'waiting') {\r\n          updateTempTables[table].orders[indexOfSelectedOrder].status = 'prepared';\r\n      } else {\r\n          updateTempTables[table].orders[indexOfSelectedOrder].status = 'delivered';\r\n          const ordersDelivered = updateTempTables[table].orders.filter((order) => order.status === 'delivered');\r\n          if (ordersDelivered.length === updateTempTables[table].orders.length) {\r\n              updateTempTables[table].tableActive = 'eating';\r\n          }\r\n      }\r\n      setTempTables(updateTempTables);\r\n    };\r\n\r\n    const waitingArray = getRelevantOrders('waiting');\r\n\r\n    const selectedMenuArr = waitingArray.map((item, i)=> {\r\n        return <ToDoMenu key={i} id={i} name={waitingArray[i][0]} table={waitingArray[i][1]} time={waitingArray[i][2]} status={waitingArray[i][3]} onSetDone={onSetDone} />\r\n    });\r\n\r\n    const deliveredArray = getRelevantOrders('prepared');\r\n\r\n    const deliveredMenuArr = deliveredArray.map((item, i)=> {\r\n        return <ToDoMenu key={i} id={i} name={deliveredArray[i][0]} table={deliveredArray[i][1]} time={deliveredArray[i][2]} onSetDone={onSetDone} />\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>To Do list:</h2>\r\n            <div className='containerOfContainer'>\r\n                <h3>Waiting list:</h3>\r\n                <Scroll>\r\n                {selectedMenuArr}\r\n                </Scroll>\r\n                <h3>Ready for delivery:</h3>\r\n                <Scroll>\r\n                    {deliveredMenuArr}\r\n                </Scroll>\r\n            </div>\r\n            <h2>Income:</h2>\r\n            {`The total revenue from all checked out tables is ${parseFloat(logTables.total).toFixed(2)}`}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport {tempMenu} from \"../Menu/tempMenu\";\r\nimport './CustomizeMenu.css'\r\nimport CategoriesWithMenu from \"../Menu/CategoriesWithMenu\";\r\n\r\nconst CustomizeMenu = ({menuInput, setMenuInput, addNewItemtoMenu, setAddNewItemtoMenu, setTempTables, setCategoryActive, categoryActive, setMenuSearch, tempTables, path, clickedTable, menuSearch, selectedCategory, setSelectedCategory}) => {\r\n    const updateMenu = () => {\r\n        let existingItems = [];\r\n        for (let i=0; i<tempMenu.length; i++) {\r\n            existingItems.push(tempMenu[i].name.toLowerCase());\r\n        }\r\n        let lastKnownId = tempMenu[tempMenu.length - 1].id;\r\n        if (menuInput.name.length > 0 && !isNaN(Number(menuInput.price)) && menuInput.category.length > 0) {\r\n            if (existingItems.includes(menuInput.name.toLowerCase())) {\r\n                return alert(`The dish ${menuInput.name} already exists, please enter a unique dish name`);\r\n            }\r\n            tempMenu.push({id: lastKnownId + 1, name: menuInput.name, price: menuInput.price, category: menuInput.category});\r\n            setAddNewItemtoMenu(false);\r\n        } else {\r\n            alert(\"Please enter correct dish details.\");\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Here you will be able to customize your menu</h2>\r\n            {addNewItemtoMenu ?\r\n            <div className='addDish'>\r\n                <span>Please enter dish name:</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.name = e.target.value;\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <span>Please enter dish price:</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.price = Math.abs(Number(e.target.value));\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <span>Please enter a category</span>\r\n                <input type=\"text\" onChange={(e) => {\r\n                    let updatedInput = {...menuInput};\r\n                    updatedInput.category = e.target.value.toLowerCase();\r\n                    setMenuInput(updatedInput);\r\n                }}/>\r\n                <button className='addTable' onClick={()=> updateMenu()}>Add dish</button>\r\n                <CategoriesWithMenu setTempTables={setTempTables} setCategoryActive={setCategoryActive} categoryActive={categoryActive} setMenuSearch={setMenuSearch} tempTables={tempTables} path={path} clickedTable={clickedTable} menuSearch={menuSearch} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory}/>\r\n            </div> :\r\n                <div>\r\n                    <CategoriesWithMenu setTempTables={setTempTables} setCategoryActive={setCategoryActive} categoryActive={categoryActive} setMenuSearch={setMenuSearch} tempTables={tempTables} path={path} clickedTable={clickedTable} menuSearch={menuSearch} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory}/>\r\n                    <button className='addTable' onClick={() => setAddNewItemtoMenu(true)}>Add a new menu item</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomizeMenu;","import React, {useState} from 'react';\nimport './App.css';\nimport Navigation from \"../components/Navigation/Navigation\";\nimport Tables from \"../components/Tables/Tables\";\nimport Orders from \"../components/Orders/Orders\";\nimport Statistics from \"../components/Statistics/Statistics\";\nimport CustomizeMenu from \"../components/CustomizeMenu/CustomizeMenu\";\n\nfunction App() {\n  /*const [tables, setTables] = useState([]);*/\n  const [clickCount, setClickCount] = useState(1);\n  const [path, setPath] = useState('tables');\n  const [clickedTable, setClickedTable] = useState(0);\n  const [logTables, setLogTables] = useState({orders: [], total: 0});\n  const [menuSearch, setMenuSearch] = useState('');\n  const [menuInput, setMenuInput] = useState({name: '', price: 0, category: ''});\n  const [addNewItemtoMenu, setAddNewItemtoMenu] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [categoryActive, setCategoryActive] = useState(0);\n  const [navActive, setNavActive] = useState(0);\n  const [tempTables, setTempTables] = useState([{\n    id: 0,\n    orders: [],\n    total: 0,\n    tableActive: 'false',\n    timeAdded: new Date()\n  }]);\n\n\n    const resetWhenChangingPath = () => {\n        setCategoryActive(0);\n        setSelectedCategory('All');\n        setMenuSearch('');\n        setMenuInput({name: '', price: 0, category: ''});\n        setAddNewItemtoMenu(false);\n    };\n\n    const getRelevantOrders = (status) => {\n        let tempWaitingOrders = [];\n        if (path === 'Statistics') {\n            for (let i=0; i<tempTables.length; i++) {\n                tempWaitingOrders.push(tempTables[i].orders.filter((order) => order.status === status));\n            }\n        } else if (path.includes('order_')) {\n            tempWaitingOrders.push(tempTables[clickedTable].orders.filter((order) => order.status === status));\n        }\n\n        const waitingOrders = tempWaitingOrders.flat(1);\n\n        waitingOrders.sort((a,b)=>a.time.getTime() - b.time.getTime());\n\n        let ordersDetailsArray = [];\n        for (let i=0; i<waitingOrders.length; i++) {\n            ordersDetailsArray.push([waitingOrders[i].name, waitingOrders[i].table, waitingOrders[i].time.getTime(), waitingOrders[i].status]);\n        }\n        return ordersDetailsArray;\n    };\n\n    const enumerateOrders = (relevantOrders) => {\n        let orderNamesArr = [];\n        for (let i=0; i<relevantOrders.length; i++) {\n            orderNamesArr.push(relevantOrders[i][0]);\n        }\n\n        let count = {};\n        orderNamesArr.forEach((i) => {\n            count[i] = (count[i] || 0) + 1;\n        });\n        let arrCount = Object.entries(count);\n        arrCount.sort();\n        return arrCount;\n    };\n\n\n  return (\n      <div className=\"App\">\n        <Navigation setNavActive={setNavActive} navActive={navActive} resetWhenChangingPath={resetWhenChangingPath} setPath={setPath} />\n        {path === 'tables' ?\n            <Tables clickedTable={clickedTable} setClickedTable={setClickedTable} clickCount={clickCount} setClickCount={setClickCount} setTempTables={setTempTables} tempTables={tempTables} path={path} setPath={setPath}/>\n            : path.includes(`order_`) ?\n                <Orders path={path} enumerateOrders={enumerateOrders} getRelevantOrders={getRelevantOrders} categoryActive={categoryActive} setCategoryActive={setCategoryActive} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} menuSearch={menuSearch} setMenuSearch={setMenuSearch} logTables={logTables} setLogTables={setLogTables} tempTables={tempTables} clickedTable={clickedTable} setTempTables={setTempTables}/> : path.includes('customize') ?\n                <CustomizeMenu path={path} setSelectedCategory={setSelectedCategory} selectedCategory={selectedCategory} menuSearch={menuSearch} clickedTable={clickedTable} tempTables={tempTables} setMenuSearch={setMenuSearch} categoryActive={categoryActive} setCategoryActive={setCategoryActive} setTempTables={setTempTables} addNewItemtoMenu={addNewItemtoMenu} setAddNewItemtoMenu={setAddNewItemtoMenu} menuInput={menuInput} setMenuInput={setMenuInput} /> :\n                <Statistics enumerateOrders={enumerateOrders} getRelevantOrders={getRelevantOrders} setTempTables={setTempTables} tempTables={tempTables} logTables={logTables}/>\n        }\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}